// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Hcp
{
    public static class GetConsulCluster
    {
        /// <summary>
        /// The cluster data source provides information about an existing HCP Consul cluster.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Hcp = Pulumi.Hcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Hcp.GetConsulCluster.Invoke(new()
        ///     {
        ///         ClusterId = @var.Cluster_id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetConsulClusterResult> InvokeAsync(GetConsulClusterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConsulClusterResult>("hcp:index/getConsulCluster:getConsulCluster", args ?? new GetConsulClusterArgs(), options.WithDefaults());

        /// <summary>
        /// The cluster data source provides information about an existing HCP Consul cluster.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Hcp = Pulumi.Hcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Hcp.GetConsulCluster.Invoke(new()
        ///     {
        ///         ClusterId = @var.Cluster_id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetConsulClusterResult> Invoke(GetConsulClusterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConsulClusterResult>("hcp:index/getConsulCluster:getConsulCluster", args ?? new GetConsulClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConsulClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the HCP Consul cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        public GetConsulClusterArgs()
        {
        }
        public static new GetConsulClusterArgs Empty => new GetConsulClusterArgs();
    }

    public sealed class GetConsulClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the HCP Consul cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        public GetConsulClusterInvokeArgs()
        {
        }
        public static new GetConsulClusterInvokeArgs Empty => new GetConsulClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetConsulClusterResult
    {
        /// <summary>
        /// Enables automatic HVN to HVN peering when creating a secondary cluster in a federation.
        /// </summary>
        public readonly bool AutoHvnToHvnPeering;
        /// <summary>
        /// The provider where the HCP Consul cluster is located. Only 'aws' is available at this time.
        /// </summary>
        public readonly string CloudProvider;
        /// <summary>
        /// The ID of the HCP Consul cluster.
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// Denotes the Consul connect feature should be enabled for this cluster.  Default to true.
        /// </summary>
        public readonly bool ConnectEnabled;
        /// <summary>
        /// Denotes that automatic Consul upgrades are enabled.
        /// </summary>
        public readonly bool ConsulAutomaticUpgrades;
        /// <summary>
        /// The cluster CA file encoded as a Base64 string.
        /// </summary>
        public readonly string ConsulCaFile;
        /// <summary>
        /// The cluster config encoded as a Base64 string.
        /// </summary>
        public readonly string ConsulConfigFile;
        /// <summary>
        /// The private URL for the Consul UI.
        /// </summary>
        public readonly string ConsulPrivateEndpointUrl;
        /// <summary>
        /// The public URL for the Consul UI. This will be empty if `public_endpoint` is `false`.
        /// </summary>
        public readonly string ConsulPublicEndpointUrl;
        /// <summary>
        /// The Consul snapshot interval.
        /// </summary>
        public readonly string ConsulSnapshotInterval;
        /// <summary>
        /// The retention policy for Consul snapshots.
        /// </summary>
        public readonly string ConsulSnapshotRetention;
        /// <summary>
        /// The Consul version of the cluster.
        /// </summary>
        public readonly string ConsulVersion;
        /// <summary>
        /// The Consul data center name of the cluster. If not specified, it is defaulted to the value of `cluster_id`.
        /// </summary>
        public readonly string Datacenter;
        /// <summary>
        /// The ID of the HVN this HCP Consul cluster is associated to.
        /// </summary>
        public readonly string HvnId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The ID of the organization the project for this HCP Consul cluster is located.
        /// </summary>
        public readonly string OrganizationId;
        /// <summary>
        /// The `self_link` of the HCP Consul cluster which is the primary in the federation setup with this HCP Consul cluster. If not specified, it is a standalone cluster.
        /// </summary>
        public readonly string PrimaryLink;
        /// <summary>
        /// The ID of the project this HCP Consul cluster is located.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// Denotes that the cluster has a public endpoint for the Consul UI. Defaults to false.
        /// </summary>
        public readonly bool PublicEndpoint;
        /// <summary>
        /// The region where the HCP Consul cluster is located.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// The the number of Consul server nodes in the cluster.
        /// </summary>
        public readonly int Scale;
        /// <summary>
        /// A unique URL identifying the HCP Consul cluster.
        /// </summary>
        public readonly string SelfLink;
        /// <summary>
        /// The t-shirt size representation of each server VM that this Consul cluster is provisioned with. Valid option for development tier - `x_small`. Valid options for other tiers - `small`, `medium`, `large`. For more details - https://cloud.hashicorp.com/pricing/consul
        /// </summary>
        public readonly string Size;
        /// <summary>
        /// The state of the HCP Consul cluster.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The tier that the HCP Consul cluster will be provisioned as.  Only `development`, `standard` and `plus` are available at this time.
        /// </summary>
        public readonly string Tier;

        [OutputConstructor]
        private GetConsulClusterResult(
            bool autoHvnToHvnPeering,

            string cloudProvider,

            string clusterId,

            bool connectEnabled,

            bool consulAutomaticUpgrades,

            string consulCaFile,

            string consulConfigFile,

            string consulPrivateEndpointUrl,

            string consulPublicEndpointUrl,

            string consulSnapshotInterval,

            string consulSnapshotRetention,

            string consulVersion,

            string datacenter,

            string hvnId,

            string id,

            string organizationId,

            string primaryLink,

            string projectId,

            bool publicEndpoint,

            string region,

            int scale,

            string selfLink,

            string size,

            string state,

            string tier)
        {
            AutoHvnToHvnPeering = autoHvnToHvnPeering;
            CloudProvider = cloudProvider;
            ClusterId = clusterId;
            ConnectEnabled = connectEnabled;
            ConsulAutomaticUpgrades = consulAutomaticUpgrades;
            ConsulCaFile = consulCaFile;
            ConsulConfigFile = consulConfigFile;
            ConsulPrivateEndpointUrl = consulPrivateEndpointUrl;
            ConsulPublicEndpointUrl = consulPublicEndpointUrl;
            ConsulSnapshotInterval = consulSnapshotInterval;
            ConsulSnapshotRetention = consulSnapshotRetention;
            ConsulVersion = consulVersion;
            Datacenter = datacenter;
            HvnId = hvnId;
            Id = id;
            OrganizationId = organizationId;
            PrimaryLink = primaryLink;
            ProjectId = projectId;
            PublicEndpoint = publicEndpoint;
            Region = region;
            Scale = scale;
            SelfLink = selfLink;
            Size = size;
            State = state;
            Tier = tier;
        }
    }
}
