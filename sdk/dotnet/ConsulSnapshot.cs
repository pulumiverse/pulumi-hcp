// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Hcp
{
    /// <summary>
    /// The Consul snapshot resource allows users to manage Consul snapshots of an HCP Consul cluster. Snapshots currently have a retention policy of 30 days.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Hcp = Pulumiverse.Hcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Note: Snapshots currently have a retention policy of 30 days. After that time, any Terraform
    ///     // state refresh will note that a new snapshot resource will be created.
    ///     var example = new Hcp.ConsulSnapshot("example", new()
    ///     {
    ///         ClusterId = "consul-cluster",
    ///         SnapshotName = "my-snapshot",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [HcpResourceType("hcp:index/consulSnapshot:ConsulSnapshot")]
    public partial class ConsulSnapshot : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the HCP Consul cluster.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// The version of Consul at the time of snapshot creation.
        /// </summary>
        [Output("consulVersion")]
        public Output<string> ConsulVersion { get; private set; } = null!;

        /// <summary>
        /// The ID of the HCP organization where the project the HCP Consul cluster is located.
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// The ID of the project the HCP Consul cluster is located.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// Timestamp of when the snapshot was restored. If the snapshot has not been restored, this field will be blank.
        /// </summary>
        [Output("restoredAt")]
        public Output<string> RestoredAt { get; private set; } = null!;

        /// <summary>
        /// The size of the snapshot in bytes.
        /// </summary>
        [Output("size")]
        public Output<int> Size { get; private set; } = null!;

        /// <summary>
        /// The ID of the Consul snapshot
        /// </summary>
        [Output("snapshotId")]
        public Output<string> SnapshotId { get; private set; } = null!;

        /// <summary>
        /// The name of the snapshot.
        /// </summary>
        [Output("snapshotName")]
        public Output<string> SnapshotName { get; private set; } = null!;

        /// <summary>
        /// The state of an HCP Consul snapshot.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;


        /// <summary>
        /// Create a ConsulSnapshot resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConsulSnapshot(string name, ConsulSnapshotArgs args, CustomResourceOptions? options = null)
            : base("hcp:index/consulSnapshot:ConsulSnapshot", name, args ?? new ConsulSnapshotArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConsulSnapshot(string name, Input<string> id, ConsulSnapshotState? state = null, CustomResourceOptions? options = null)
            : base("hcp:index/consulSnapshot:ConsulSnapshot", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConsulSnapshot resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConsulSnapshot Get(string name, Input<string> id, ConsulSnapshotState? state = null, CustomResourceOptions? options = null)
        {
            return new ConsulSnapshot(name, id, state, options);
        }
    }

    public sealed class ConsulSnapshotArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the HCP Consul cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// The name of the snapshot.
        /// </summary>
        [Input("snapshotName", required: true)]
        public Input<string> SnapshotName { get; set; } = null!;

        public ConsulSnapshotArgs()
        {
        }
        public static new ConsulSnapshotArgs Empty => new ConsulSnapshotArgs();
    }

    public sealed class ConsulSnapshotState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the HCP Consul cluster.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// The version of Consul at the time of snapshot creation.
        /// </summary>
        [Input("consulVersion")]
        public Input<string>? ConsulVersion { get; set; }

        /// <summary>
        /// The ID of the HCP organization where the project the HCP Consul cluster is located.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// The ID of the project the HCP Consul cluster is located.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// Timestamp of when the snapshot was restored. If the snapshot has not been restored, this field will be blank.
        /// </summary>
        [Input("restoredAt")]
        public Input<string>? RestoredAt { get; set; }

        /// <summary>
        /// The size of the snapshot in bytes.
        /// </summary>
        [Input("size")]
        public Input<int>? Size { get; set; }

        /// <summary>
        /// The ID of the Consul snapshot
        /// </summary>
        [Input("snapshotId")]
        public Input<string>? SnapshotId { get; set; }

        /// <summary>
        /// The name of the snapshot.
        /// </summary>
        [Input("snapshotName")]
        public Input<string>? SnapshotName { get; set; }

        /// <summary>
        /// The state of an HCP Consul snapshot.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public ConsulSnapshotState()
        {
        }
        public static new ConsulSnapshotState Empty => new ConsulSnapshotState();
    }
}
