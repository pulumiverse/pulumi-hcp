// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Hcp
{
    public static class GetVaultCluster
    {
        /// <summary>
        /// The cluster data source provides information about an existing HCP Vault cluster.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Hcp = Pulumi.Hcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Hcp.GetVaultCluster.Invoke(new()
        ///     {
        ///         ClusterId = @var.Cluster_id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetVaultClusterResult> InvokeAsync(GetVaultClusterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVaultClusterResult>("hcp:index/getVaultCluster:getVaultCluster", args ?? new GetVaultClusterArgs(), options.WithDefaults());

        /// <summary>
        /// The cluster data source provides information about an existing HCP Vault cluster.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Hcp = Pulumi.Hcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Hcp.GetVaultCluster.Invoke(new()
        ///     {
        ///         ClusterId = @var.Cluster_id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetVaultClusterResult> Invoke(GetVaultClusterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVaultClusterResult>("hcp:index/getVaultCluster:getVaultCluster", args ?? new GetVaultClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVaultClusterArgs : global::Pulumi.InvokeArgs
    {
        [Input("auditLogConfigs")]
        private List<Inputs.GetVaultClusterAuditLogConfigArgs>? _auditLogConfigs;

        /// <summary>
        /// The audit logs configuration for export. (https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)
        /// </summary>
        public List<Inputs.GetVaultClusterAuditLogConfigArgs> AuditLogConfigs
        {
            get => _auditLogConfigs ?? (_auditLogConfigs = new List<Inputs.GetVaultClusterAuditLogConfigArgs>());
            set => _auditLogConfigs = value;
        }

        /// <summary>
        /// The ID of the HCP Vault cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        [Input("metricsConfigs")]
        private List<Inputs.GetVaultClusterMetricsConfigArgs>? _metricsConfigs;

        /// <summary>
        /// The metrics configuration for export. (https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)
        /// </summary>
        public List<Inputs.GetVaultClusterMetricsConfigArgs> MetricsConfigs
        {
            get => _metricsConfigs ?? (_metricsConfigs = new List<Inputs.GetVaultClusterMetricsConfigArgs>());
            set => _metricsConfigs = value;
        }

        public GetVaultClusterArgs()
        {
        }
        public static new GetVaultClusterArgs Empty => new GetVaultClusterArgs();
    }

    public sealed class GetVaultClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("auditLogConfigs")]
        private InputList<Inputs.GetVaultClusterAuditLogConfigInputArgs>? _auditLogConfigs;

        /// <summary>
        /// The audit logs configuration for export. (https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)
        /// </summary>
        public InputList<Inputs.GetVaultClusterAuditLogConfigInputArgs> AuditLogConfigs
        {
            get => _auditLogConfigs ?? (_auditLogConfigs = new InputList<Inputs.GetVaultClusterAuditLogConfigInputArgs>());
            set => _auditLogConfigs = value;
        }

        /// <summary>
        /// The ID of the HCP Vault cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        [Input("metricsConfigs")]
        private InputList<Inputs.GetVaultClusterMetricsConfigInputArgs>? _metricsConfigs;

        /// <summary>
        /// The metrics configuration for export. (https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)
        /// </summary>
        public InputList<Inputs.GetVaultClusterMetricsConfigInputArgs> MetricsConfigs
        {
            get => _metricsConfigs ?? (_metricsConfigs = new InputList<Inputs.GetVaultClusterMetricsConfigInputArgs>());
            set => _metricsConfigs = value;
        }

        public GetVaultClusterInvokeArgs()
        {
        }
        public static new GetVaultClusterInvokeArgs Empty => new GetVaultClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetVaultClusterResult
    {
        /// <summary>
        /// The audit logs configuration for export. (https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVaultClusterAuditLogConfigResult> AuditLogConfigs;
        /// <summary>
        /// The provider where the HCP Vault cluster is located.
        /// </summary>
        public readonly string CloudProvider;
        /// <summary>
        /// The ID of the HCP Vault cluster.
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// The time that the Vault cluster was created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The ID of the HVN this HCP Vault cluster is associated to.
        /// </summary>
        public readonly string HvnId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetVaultClusterMajorVersionUpgradeConfigResult> MajorVersionUpgradeConfigs;
        /// <summary>
        /// The metrics configuration for export. (https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVaultClusterMetricsConfigResult> MetricsConfigs;
        /// <summary>
        /// The minimum Vault version to use when creating the cluster. If not specified, it is defaulted to the version that is currently recommended by HCP.
        /// </summary>
        public readonly string MinVaultVersion;
        /// <summary>
        /// The name of the customer namespace this HCP Vault cluster is located in.
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// The ID of the organization this HCP Vault cluster is located in.
        /// </summary>
        public readonly string OrganizationId;
        /// <summary>
        /// The performance replication [paths filter](https://learn.hashicorp.com/tutorials/vault/paths-filter). Applies to performance replication secondaries only and operates in "deny" mode only.
        /// </summary>
        public readonly ImmutableArray<string> PathsFilters;
        /// <summary>
        /// The `self_link` of the HCP Vault Plus tier cluster which is the primary in the performance replication setup with this HCP Vault Plus tier cluster. If not specified, it is a standalone Plus tier HCP Vault cluster.
        /// </summary>
        public readonly string PrimaryLink;
        /// <summary>
        /// The ID of the project this HCP Vault cluster is located in.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// Denotes that the cluster has a public endpoint. Defaults to false.
        /// </summary>
        public readonly bool PublicEndpoint;
        /// <summary>
        /// The region where the HCP Vault cluster is located.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// A unique URL identifying the Vault cluster.
        /// </summary>
        public readonly string SelfLink;
        /// <summary>
        /// The state of the Vault cluster.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The tier that the HCP Vault cluster will be provisioned as.  Only 'development' is available at this time.
        /// </summary>
        public readonly string Tier;
        /// <summary>
        /// The private URL for the Vault cluster.
        /// </summary>
        public readonly string VaultPrivateEndpointUrl;
        /// <summary>
        /// The public URL for the Vault cluster. This will be empty if `public_endpoint` is `false`.
        /// </summary>
        public readonly string VaultPublicEndpointUrl;
        /// <summary>
        /// The Vault version of the cluster.
        /// </summary>
        public readonly string VaultVersion;

        [OutputConstructor]
        private GetVaultClusterResult(
            ImmutableArray<Outputs.GetVaultClusterAuditLogConfigResult> auditLogConfigs,

            string cloudProvider,

            string clusterId,

            string createdAt,

            string hvnId,

            string id,

            ImmutableArray<Outputs.GetVaultClusterMajorVersionUpgradeConfigResult> majorVersionUpgradeConfigs,

            ImmutableArray<Outputs.GetVaultClusterMetricsConfigResult> metricsConfigs,

            string minVaultVersion,

            string @namespace,

            string organizationId,

            ImmutableArray<string> pathsFilters,

            string primaryLink,

            string projectId,

            bool publicEndpoint,

            string region,

            string selfLink,

            string state,

            string tier,

            string vaultPrivateEndpointUrl,

            string vaultPublicEndpointUrl,

            string vaultVersion)
        {
            AuditLogConfigs = auditLogConfigs;
            CloudProvider = cloudProvider;
            ClusterId = clusterId;
            CreatedAt = createdAt;
            HvnId = hvnId;
            Id = id;
            MajorVersionUpgradeConfigs = majorVersionUpgradeConfigs;
            MetricsConfigs = metricsConfigs;
            MinVaultVersion = minVaultVersion;
            Namespace = @namespace;
            OrganizationId = organizationId;
            PathsFilters = pathsFilters;
            PrimaryLink = primaryLink;
            ProjectId = projectId;
            PublicEndpoint = publicEndpoint;
            Region = region;
            SelfLink = selfLink;
            State = state;
            Tier = tier;
            VaultPrivateEndpointUrl = vaultPrivateEndpointUrl;
            VaultPublicEndpointUrl = vaultPublicEndpointUrl;
            VaultVersion = vaultVersion;
        }
    }
}
