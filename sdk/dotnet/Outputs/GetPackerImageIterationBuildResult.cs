// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Hcp.Outputs
{

    [OutputType]
    public sealed class GetPackerImageIterationBuildResult
    {
        /// <summary>
        /// Name of the cloud provider this image is stored-in, if any.
        /// </summary>
        public readonly string CloudProvider;
        /// <summary>
        /// Name of the builder that built this. Ex: 'amazon-ebs.example'.
        /// </summary>
        public readonly string ComponentType;
        /// <summary>
        /// Creation time of this build.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// HCP ID of this build.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetPackerImageIterationBuildImageResult> Images;
        /// <summary>
        /// Labels for this build.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Packer generated UUID of this build.
        /// </summary>
        public readonly string PackerRunUuid;
        /// <summary>
        /// Status of this build. DONE means that all images tied to this build were successfully built.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Time this build was last updated.
        /// </summary>
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetPackerImageIterationBuildResult(
            string cloudProvider,

            string componentType,

            string createdAt,

            string id,

            ImmutableArray<Outputs.GetPackerImageIterationBuildImageResult> images,

            ImmutableDictionary<string, string> labels,

            string packerRunUuid,

            string status,

            string updatedAt)
        {
            CloudProvider = cloudProvider;
            ComponentType = componentType;
            CreatedAt = createdAt;
            Id = id;
            Images = images;
            Labels = labels;
            PackerRunUuid = packerRunUuid;
            Status = status;
            UpdatedAt = updatedAt;
        }
    }
}
