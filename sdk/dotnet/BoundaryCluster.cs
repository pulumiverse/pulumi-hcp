// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Hcp
{
    /// <summary>
    /// This resource allows you to manage an HCP Boundary cluster
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Hcp = Pulumiverse.Hcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Hcp.BoundaryCluster("example", new()
    ///     {
    ///         ClusterId = "boundary-cluster",
    ///         Password = "Password123!",
    ///         Username = "test-user",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// # The import ID is {cluster_id}
    /// 
    /// ```sh
    ///  $ pulumi import hcp:index/boundaryCluster:BoundaryCluster example boundary-cluster
    /// ```
    /// </summary>
    [HcpResourceType("hcp:index/boundaryCluster:BoundaryCluster")]
    public partial class BoundaryCluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Boundary cluster
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// A unique URL identifying the Boundary cluster.
        /// </summary>
        [Output("clusterUrl")]
        public Output<string> ClusterUrl { get; private set; } = null!;

        /// <summary>
        /// The time that the Boundary cluster was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The password of the initial admin user. This must be at least 8 characters in length. Note that this may show up in logs, and it will be stored in the state file.
        /// </summary>
        [Output("password")]
        public Output<string> Password { get; private set; } = null!;

        /// <summary>
        /// The state of the Boundary cluster.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The username of the initial admin user. This must be at least 3 characters in length, alphanumeric, hyphen, or period.
        /// </summary>
        [Output("username")]
        public Output<string> Username { get; private set; } = null!;


        /// <summary>
        /// Create a BoundaryCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BoundaryCluster(string name, BoundaryClusterArgs args, CustomResourceOptions? options = null)
            : base("hcp:index/boundaryCluster:BoundaryCluster", name, args ?? new BoundaryClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BoundaryCluster(string name, Input<string> id, BoundaryClusterState? state = null, CustomResourceOptions? options = null)
            : base("hcp:index/boundaryCluster:BoundaryCluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BoundaryCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BoundaryCluster Get(string name, Input<string> id, BoundaryClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new BoundaryCluster(name, id, state, options);
        }
    }

    public sealed class BoundaryClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Boundary cluster
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// The password of the initial admin user. This must be at least 8 characters in length. Note that this may show up in logs, and it will be stored in the state file.
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        /// <summary>
        /// The username of the initial admin user. This must be at least 3 characters in length, alphanumeric, hyphen, or period.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public BoundaryClusterArgs()
        {
        }
        public static new BoundaryClusterArgs Empty => new BoundaryClusterArgs();
    }

    public sealed class BoundaryClusterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Boundary cluster
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// A unique URL identifying the Boundary cluster.
        /// </summary>
        [Input("clusterUrl")]
        public Input<string>? ClusterUrl { get; set; }

        /// <summary>
        /// The time that the Boundary cluster was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The password of the initial admin user. This must be at least 8 characters in length. Note that this may show up in logs, and it will be stored in the state file.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// The state of the Boundary cluster.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The username of the initial admin user. This must be at least 3 characters in length, alphanumeric, hyphen, or period.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public BoundaryClusterState()
        {
        }
        public static new BoundaryClusterState Empty => new BoundaryClusterState();
    }
}
