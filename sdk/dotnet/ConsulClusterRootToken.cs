// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Hcp
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Hcp = Pulumiverse.Hcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Hcp.ConsulClusterRootToken("example", new()
    ///     {
    ///         ClusterId = "consul-cluster",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [HcpResourceType("hcp:index/consulClusterRootToken:ConsulClusterRootToken")]
    public partial class ConsulClusterRootToken : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The accessor ID of the root ACL token.
        /// </summary>
        [Output("accessorId")]
        public Output<string> AccessorId { get; private set; } = null!;

        /// <summary>
        /// The ID of the HCP Consul cluster.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// The root ACL token Base64 encoded in a Kubernetes secret.
        /// </summary>
        [Output("kubernetesSecret")]
        public Output<string> KubernetesSecret { get; private set; } = null!;

        /// <summary>
        /// The secret ID of the root ACL token.
        /// </summary>
        [Output("secretId")]
        public Output<string> SecretId { get; private set; } = null!;


        /// <summary>
        /// Create a ConsulClusterRootToken resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConsulClusterRootToken(string name, ConsulClusterRootTokenArgs args, CustomResourceOptions? options = null)
            : base("hcp:index/consulClusterRootToken:ConsulClusterRootToken", name, args ?? new ConsulClusterRootTokenArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConsulClusterRootToken(string name, Input<string> id, ConsulClusterRootTokenState? state = null, CustomResourceOptions? options = null)
            : base("hcp:index/consulClusterRootToken:ConsulClusterRootToken", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConsulClusterRootToken resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConsulClusterRootToken Get(string name, Input<string> id, ConsulClusterRootTokenState? state = null, CustomResourceOptions? options = null)
        {
            return new ConsulClusterRootToken(name, id, state, options);
        }
    }

    public sealed class ConsulClusterRootTokenArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the HCP Consul cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        public ConsulClusterRootTokenArgs()
        {
        }
        public static new ConsulClusterRootTokenArgs Empty => new ConsulClusterRootTokenArgs();
    }

    public sealed class ConsulClusterRootTokenState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The accessor ID of the root ACL token.
        /// </summary>
        [Input("accessorId")]
        public Input<string>? AccessorId { get; set; }

        /// <summary>
        /// The ID of the HCP Consul cluster.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// The root ACL token Base64 encoded in a Kubernetes secret.
        /// </summary>
        [Input("kubernetesSecret")]
        public Input<string>? KubernetesSecret { get; set; }

        /// <summary>
        /// The secret ID of the root ACL token.
        /// </summary>
        [Input("secretId")]
        public Input<string>? SecretId { get; set; }

        public ConsulClusterRootTokenState()
        {
        }
        public static new ConsulClusterRootTokenState Empty => new ConsulClusterRootTokenState();
    }
}
