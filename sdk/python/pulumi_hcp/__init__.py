# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from . import _utilities
import typing
# Export this package's modules as members:
from .aws_network_peering import *
from .aws_transit_gateway_attachment import *
from .azure_peering_connection import *
from .boundary_cluster import *
from .consul_cluster import *
from .consul_cluster_root_token import *
from .consul_snapshot import *
from .get_aws_network_peering import *
from .get_aws_transit_gateway_attachment import *
from .get_azure_peering_connection import *
from .get_boundary_cluster import *
from .get_consul_agent_helm_config import *
from .get_consul_agent_kubernetes_secret import *
from .get_consul_cluster import *
from .get_consul_versions import *
from .get_hvn import *
from .get_hvn_peering_connection import *
from .get_hvn_route import *
from .get_packer_image import *
from .get_packer_image_iteration import *
from .get_packer_iteration import *
from .get_vault_cluster import *
from .hvn import *
from .hvn_peering_connection import *
from .hvn_route import *
from .provider import *
from .vault_cluster import *
from .vault_cluster_admin_token import *
from ._inputs import *
from . import outputs

# Make subpackages available:
if typing.TYPE_CHECKING:
    import pulumi_hcp.config as __config
    config = __config
else:
    config = _utilities.lazy_import('pulumi_hcp.config')

_utilities.register(
    resource_modules="""
[
 {
  "pkg": "hcp",
  "mod": "index/awsNetworkPeering",
  "fqn": "pulumi_hcp",
  "classes": {
   "hcp:index/awsNetworkPeering:AwsNetworkPeering": "AwsNetworkPeering"
  }
 },
 {
  "pkg": "hcp",
  "mod": "index/awsTransitGatewayAttachment",
  "fqn": "pulumi_hcp",
  "classes": {
   "hcp:index/awsTransitGatewayAttachment:AwsTransitGatewayAttachment": "AwsTransitGatewayAttachment"
  }
 },
 {
  "pkg": "hcp",
  "mod": "index/azurePeeringConnection",
  "fqn": "pulumi_hcp",
  "classes": {
   "hcp:index/azurePeeringConnection:AzurePeeringConnection": "AzurePeeringConnection"
  }
 },
 {
  "pkg": "hcp",
  "mod": "index/boundaryCluster",
  "fqn": "pulumi_hcp",
  "classes": {
   "hcp:index/boundaryCluster:BoundaryCluster": "BoundaryCluster"
  }
 },
 {
  "pkg": "hcp",
  "mod": "index/consulCluster",
  "fqn": "pulumi_hcp",
  "classes": {
   "hcp:index/consulCluster:ConsulCluster": "ConsulCluster"
  }
 },
 {
  "pkg": "hcp",
  "mod": "index/consulClusterRootToken",
  "fqn": "pulumi_hcp",
  "classes": {
   "hcp:index/consulClusterRootToken:ConsulClusterRootToken": "ConsulClusterRootToken"
  }
 },
 {
  "pkg": "hcp",
  "mod": "index/consulSnapshot",
  "fqn": "pulumi_hcp",
  "classes": {
   "hcp:index/consulSnapshot:ConsulSnapshot": "ConsulSnapshot"
  }
 },
 {
  "pkg": "hcp",
  "mod": "index/hvn",
  "fqn": "pulumi_hcp",
  "classes": {
   "hcp:index/hvn:Hvn": "Hvn"
  }
 },
 {
  "pkg": "hcp",
  "mod": "index/hvnPeeringConnection",
  "fqn": "pulumi_hcp",
  "classes": {
   "hcp:index/hvnPeeringConnection:HvnPeeringConnection": "HvnPeeringConnection"
  }
 },
 {
  "pkg": "hcp",
  "mod": "index/hvnRoute",
  "fqn": "pulumi_hcp",
  "classes": {
   "hcp:index/hvnRoute:HvnRoute": "HvnRoute"
  }
 },
 {
  "pkg": "hcp",
  "mod": "index/vaultCluster",
  "fqn": "pulumi_hcp",
  "classes": {
   "hcp:index/vaultCluster:VaultCluster": "VaultCluster"
  }
 },
 {
  "pkg": "hcp",
  "mod": "index/vaultClusterAdminToken",
  "fqn": "pulumi_hcp",
  "classes": {
   "hcp:index/vaultClusterAdminToken:VaultClusterAdminToken": "VaultClusterAdminToken"
  }
 }
]
""",
    resource_packages="""
[
 {
  "pkg": "hcp",
  "token": "pulumi:providers:hcp",
  "fqn": "pulumi_hcp",
  "class": "Provider"
 }
]
"""
)
