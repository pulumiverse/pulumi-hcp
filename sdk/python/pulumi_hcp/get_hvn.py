# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetHvnResult',
    'AwaitableGetHvnResult',
    'get_hvn',
    'get_hvn_output',
]

@pulumi.output_type
class GetHvnResult:
    """
    A collection of values returned by getHvn.
    """
    def __init__(__self__, cidr_block=None, cloud_provider=None, created_at=None, hvn_id=None, id=None, organization_id=None, project_id=None, provider_account_id=None, region=None, self_link=None, state=None):
        if cidr_block and not isinstance(cidr_block, str):
            raise TypeError("Expected argument 'cidr_block' to be a str")
        pulumi.set(__self__, "cidr_block", cidr_block)
        if cloud_provider and not isinstance(cloud_provider, str):
            raise TypeError("Expected argument 'cloud_provider' to be a str")
        pulumi.set(__self__, "cloud_provider", cloud_provider)
        if created_at and not isinstance(created_at, str):
            raise TypeError("Expected argument 'created_at' to be a str")
        pulumi.set(__self__, "created_at", created_at)
        if hvn_id and not isinstance(hvn_id, str):
            raise TypeError("Expected argument 'hvn_id' to be a str")
        pulumi.set(__self__, "hvn_id", hvn_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if organization_id and not isinstance(organization_id, str):
            raise TypeError("Expected argument 'organization_id' to be a str")
        pulumi.set(__self__, "organization_id", organization_id)
        if project_id and not isinstance(project_id, str):
            raise TypeError("Expected argument 'project_id' to be a str")
        pulumi.set(__self__, "project_id", project_id)
        if provider_account_id and not isinstance(provider_account_id, str):
            raise TypeError("Expected argument 'provider_account_id' to be a str")
        pulumi.set(__self__, "provider_account_id", provider_account_id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if self_link and not isinstance(self_link, str):
            raise TypeError("Expected argument 'self_link' to be a str")
        pulumi.set(__self__, "self_link", self_link)
        if state and not isinstance(state, str):
            raise TypeError("Expected argument 'state' to be a str")
        pulumi.set(__self__, "state", state)

    @property
    @pulumi.getter(name="cidrBlock")
    def cidr_block(self) -> str:
        """
        The CIDR range of the HVN.
        """
        return pulumi.get(self, "cidr_block")

    @property
    @pulumi.getter(name="cloudProvider")
    def cloud_provider(self) -> str:
        """
        The provider where the HVN is located.
        """
        return pulumi.get(self, "cloud_provider")

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> str:
        """
        The time that the HVN was created.
        """
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter(name="hvnId")
    def hvn_id(self) -> str:
        """
        The ID of the HashiCorp Virtual Network (HVN).
        """
        return pulumi.get(self, "hvn_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="organizationId")
    def organization_id(self) -> str:
        """
        The ID of the HCP organization where the HVN is located.
        """
        return pulumi.get(self, "organization_id")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> str:
        """
        The ID of the HCP project where the HVN is located.
        """
        return pulumi.get(self, "project_id")

    @property
    @pulumi.getter(name="providerAccountId")
    def provider_account_id(self) -> str:
        """
        The provider account ID where the HVN is located.
        """
        return pulumi.get(self, "provider_account_id")

    @property
    @pulumi.getter
    def region(self) -> str:
        """
        The region where the HVN is located.
        """
        return pulumi.get(self, "region")

    @property
    @pulumi.getter(name="selfLink")
    def self_link(self) -> str:
        """
        A unique URL identifying the HVN.
        """
        return pulumi.get(self, "self_link")

    @property
    @pulumi.getter
    def state(self) -> str:
        """
        The state of the HVN route.
        """
        return pulumi.get(self, "state")


class AwaitableGetHvnResult(GetHvnResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetHvnResult(
            cidr_block=self.cidr_block,
            cloud_provider=self.cloud_provider,
            created_at=self.created_at,
            hvn_id=self.hvn_id,
            id=self.id,
            organization_id=self.organization_id,
            project_id=self.project_id,
            provider_account_id=self.provider_account_id,
            region=self.region,
            self_link=self.self_link,
            state=self.state)


def get_hvn(hvn_id: Optional[str] = None,
            opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetHvnResult:
    """
    The HVN data source provides information about an existing HashiCorp Virtual Network.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_hcp as hcp

    example = hcp.get_hvn(hvn_id=var["hvn_id"])
    ```


    :param str hvn_id: The ID of the HashiCorp Virtual Network (HVN).
    """
    __args__ = dict()
    __args__['hvnId'] = hvn_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('hcp:index/getHvn:getHvn', __args__, opts=opts, typ=GetHvnResult).value

    return AwaitableGetHvnResult(
        cidr_block=__ret__.cidr_block,
        cloud_provider=__ret__.cloud_provider,
        created_at=__ret__.created_at,
        hvn_id=__ret__.hvn_id,
        id=__ret__.id,
        organization_id=__ret__.organization_id,
        project_id=__ret__.project_id,
        provider_account_id=__ret__.provider_account_id,
        region=__ret__.region,
        self_link=__ret__.self_link,
        state=__ret__.state)


@_utilities.lift_output_func(get_hvn)
def get_hvn_output(hvn_id: Optional[pulumi.Input[str]] = None,
                   opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetHvnResult]:
    """
    The HVN data source provides information about an existing HashiCorp Virtual Network.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_hcp as hcp

    example = hcp.get_hvn(hvn_id=var["hvn_id"])
    ```


    :param str hvn_id: The ID of the HashiCorp Virtual Network (HVN).
    """
    ...
