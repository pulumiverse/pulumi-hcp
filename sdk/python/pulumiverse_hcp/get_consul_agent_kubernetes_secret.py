# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetConsulAgentKubernetesSecretResult',
    'AwaitableGetConsulAgentKubernetesSecretResult',
    'get_consul_agent_kubernetes_secret',
    'get_consul_agent_kubernetes_secret_output',
]

@pulumi.output_type
class GetConsulAgentKubernetesSecretResult:
    """
    A collection of values returned by getConsulAgentKubernetesSecret.
    """
    def __init__(__self__, cluster_id=None, id=None, secret=None):
        if cluster_id and not isinstance(cluster_id, str):
            raise TypeError("Expected argument 'cluster_id' to be a str")
        pulumi.set(__self__, "cluster_id", cluster_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if secret and not isinstance(secret, str):
            raise TypeError("Expected argument 'secret' to be a str")
        pulumi.set(__self__, "secret", secret)

    @property
    @pulumi.getter(name="clusterId")
    def cluster_id(self) -> str:
        """
        The ID of the HCP Consul cluster.
        """
        return pulumi.get(self, "cluster_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def secret(self) -> str:
        """
        The Consul agent configuration in the format of a Kubernetes secret (YAML).
        """
        return pulumi.get(self, "secret")


class AwaitableGetConsulAgentKubernetesSecretResult(GetConsulAgentKubernetesSecretResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetConsulAgentKubernetesSecretResult(
            cluster_id=self.cluster_id,
            id=self.id,
            secret=self.secret)


def get_consul_agent_kubernetes_secret(cluster_id: Optional[str] = None,
                                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetConsulAgentKubernetesSecretResult:
    """
    The agent config Kubernetes secret data source provides Consul agents running in Kubernetes the configuration needed to connect to the Consul cluster.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_hcp as hcp

    test = hcp.get_consul_agent_kubernetes_secret(cluster_id=var["cluster_id"])
    ```


    :param str cluster_id: The ID of the HCP Consul cluster.
    """
    __args__ = dict()
    __args__['clusterId'] = cluster_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('hcp:index/getConsulAgentKubernetesSecret:getConsulAgentKubernetesSecret', __args__, opts=opts, typ=GetConsulAgentKubernetesSecretResult).value

    return AwaitableGetConsulAgentKubernetesSecretResult(
        cluster_id=__ret__.cluster_id,
        id=__ret__.id,
        secret=__ret__.secret)


@_utilities.lift_output_func(get_consul_agent_kubernetes_secret)
def get_consul_agent_kubernetes_secret_output(cluster_id: Optional[pulumi.Input[str]] = None,
                                              opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetConsulAgentKubernetesSecretResult]:
    """
    The agent config Kubernetes secret data source provides Consul agents running in Kubernetes the configuration needed to connect to the Consul cluster.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_hcp as hcp

    test = hcp.get_consul_agent_kubernetes_secret(cluster_id=var["cluster_id"])
    ```


    :param str cluster_id: The ID of the HCP Consul cluster.
    """
    ...
