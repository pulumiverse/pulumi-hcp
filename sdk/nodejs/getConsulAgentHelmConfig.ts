// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The Consul agent Helm config data source provides Helm values for a Consul agent running in Kubernetes.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as hcp from "@pulumi/hcp";
 *
 * const example = hcp.getConsulAgentHelmConfig({
 *     clusterId: _var.cluster_id,
 *     kubernetesEndpoint: _var.kubernetes_endpoint,
 * });
 * ```
 */
export function getConsulAgentHelmConfig(args: GetConsulAgentHelmConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetConsulAgentHelmConfigResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("hcp:index/getConsulAgentHelmConfig:getConsulAgentHelmConfig", {
        "clusterId": args.clusterId,
        "exposeGossipPorts": args.exposeGossipPorts,
        "kubernetesEndpoint": args.kubernetesEndpoint,
    }, opts);
}

/**
 * A collection of arguments for invoking getConsulAgentHelmConfig.
 */
export interface GetConsulAgentHelmConfigArgs {
    /**
     * The ID of the HCP Consul cluster.
     */
    clusterId: string;
    /**
     * Denotes that the gossip ports should be exposed.
     */
    exposeGossipPorts?: boolean;
    /**
     * The FQDN for the Kubernetes API.
     */
    kubernetesEndpoint: string;
}

/**
 * A collection of values returned by getConsulAgentHelmConfig.
 */
export interface GetConsulAgentHelmConfigResult {
    /**
     * The ID of the HCP Consul cluster.
     */
    readonly clusterId: string;
    /**
     * The agent Helm config.
     */
    readonly config: string;
    /**
     * Denotes that the gossip ports should be exposed.
     */
    readonly exposeGossipPorts?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The FQDN for the Kubernetes API.
     */
    readonly kubernetesEndpoint: string;
}

export function getConsulAgentHelmConfigOutput(args: GetConsulAgentHelmConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConsulAgentHelmConfigResult> {
    return pulumi.output(args).apply(a => getConsulAgentHelmConfig(a, opts))
}

/**
 * A collection of arguments for invoking getConsulAgentHelmConfig.
 */
export interface GetConsulAgentHelmConfigOutputArgs {
    /**
     * The ID of the HCP Consul cluster.
     */
    clusterId: pulumi.Input<string>;
    /**
     * Denotes that the gossip ports should be exposed.
     */
    exposeGossipPorts?: pulumi.Input<boolean>;
    /**
     * The FQDN for the Kubernetes API.
     */
    kubernetesEndpoint: pulumi.Input<string>;
}
