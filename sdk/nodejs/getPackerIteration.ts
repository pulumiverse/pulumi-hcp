// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The Packer Image data source iteration gets the most recent iteration (or build) of an image, given a channel.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as hcp from "@pulumi/hcp";
 *
 * const hardened_source = pulumi.output(hcp.getPackerIteration({
 *     bucketName: "hardened-ubuntu-16-04",
 *     channel: "megan-test",
 * }));
 * ```
 */
export function getPackerIteration(args: GetPackerIterationArgs, opts?: pulumi.InvokeOptions): Promise<GetPackerIterationResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("hcp:index/getPackerIteration:getPackerIteration", {
        "bucketName": args.bucketName,
        "channel": args.channel,
    }, opts);
}

/**
 * A collection of arguments for invoking getPackerIteration.
 */
export interface GetPackerIterationArgs {
    /**
     * The slug of the HCP Packer Registry image bucket to pull from.
     */
    bucketName: string;
    /**
     * The channel that points to the version of the image you want.
     */
    channel: string;
}

/**
 * A collection of values returned by getPackerIteration.
 */
export interface GetPackerIterationResult {
    /**
     * The name of the person who created this iteration.
     */
    readonly authorId: string;
    /**
     * The slug of the HCP Packer Registry image bucket to pull from.
     */
    readonly bucketName: string;
    /**
     * The channel that points to the version of the image you want.
     */
    readonly channel: string;
    /**
     * Creation time of this iteration
     */
    readonly createdAt: string;
    /**
     * The unique fingerprint associated with this iteration; often a git sha.
     */
    readonly fingerprint: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Incremental version of this iteration
     */
    readonly incrementalVersion: number;
    /**
     * The ID of the organization this HCP Packer registry is located in.
     */
    readonly organizationId: string;
    /**
     * The ID of the project this HCP Packer registry is located in.
     */
    readonly projectId: string;
    /**
     * The revocation time of this iteration. This field will be null for any iteration that has not been revoked or scheduled for revocation.
     */
    readonly revokeAt: string;
    /**
     * The ULID of this iteration.
     */
    readonly ulid: string;
    /**
     * Time this build was last updated.
     */
    readonly updatedAt: string;
}

export function getPackerIterationOutput(args: GetPackerIterationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPackerIterationResult> {
    return pulumi.output(args).apply(a => getPackerIteration(a, opts))
}

/**
 * A collection of arguments for invoking getPackerIteration.
 */
export interface GetPackerIterationOutputArgs {
    /**
     * The slug of the HCP Packer Registry image bucket to pull from.
     */
    bucketName: pulumi.Input<string>;
    /**
     * The channel that points to the version of the image you want.
     */
    channel: pulumi.Input<string>;
}
