// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * # The import ID is {cluster_id}
 *
 * ```sh
 *  $ pulumi import hcp:index/vaultCluster:VaultCluster example vault-cluster
 * ```
 */
export class VaultCluster extends pulumi.CustomResource {
    /**
     * Get an existing VaultCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VaultClusterState, opts?: pulumi.CustomResourceOptions): VaultCluster {
        return new VaultCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'hcp:index/vaultCluster:VaultCluster';

    /**
     * Returns true if the given object is an instance of VaultCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VaultCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VaultCluster.__pulumiType;
    }

    /**
     * The audit logs configuration for export. (https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)
     */
    public readonly auditLogConfig!: pulumi.Output<outputs.VaultClusterAuditLogConfig | undefined>;
    /**
     * The provider where the HCP Vault cluster is located.
     */
    public /*out*/ readonly cloudProvider!: pulumi.Output<string>;
    /**
     * The ID of the HCP Vault cluster.
     */
    public readonly clusterId!: pulumi.Output<string>;
    /**
     * The time that the Vault cluster was created.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The ID of the HVN this HCP Vault cluster is associated to.
     */
    public readonly hvnId!: pulumi.Output<string>;
    /**
     * The metrics configuration for export. (https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)
     */
    public readonly metricsConfig!: pulumi.Output<outputs.VaultClusterMetricsConfig | undefined>;
    /**
     * The minimum Vault version to use when creating the cluster. If not specified, it is defaulted to the version that is currently recommended by HCP.
     */
    public readonly minVaultVersion!: pulumi.Output<string | undefined>;
    /**
     * The name of the customer namespace this HCP Vault cluster is located in.
     */
    public /*out*/ readonly namespace!: pulumi.Output<string>;
    /**
     * The ID of the organization this HCP Vault cluster is located in.
     */
    public /*out*/ readonly organizationId!: pulumi.Output<string>;
    /**
     * The performance replication [paths filter](https://learn.hashicorp.com/tutorials/vault/paths-filter). Applies to performance replication secondaries only and operates in "deny" mode only.
     */
    public readonly pathsFilters!: pulumi.Output<string[] | undefined>;
    /**
     * The `selfLink` of the HCP Vault Plus tier cluster which is the primary in the performance replication setup with this HCP Vault Plus tier cluster. If not specified, it is a standalone Plus tier HCP Vault cluster.
     */
    public readonly primaryLink!: pulumi.Output<string | undefined>;
    /**
     * The ID of the project this HCP Vault cluster is located in.
     */
    public /*out*/ readonly projectId!: pulumi.Output<string>;
    /**
     * Denotes that the cluster has a public endpoint. Defaults to false.
     */
    public readonly publicEndpoint!: pulumi.Output<boolean | undefined>;
    /**
     * The region where the HCP Vault cluster is located.
     */
    public /*out*/ readonly region!: pulumi.Output<string>;
    /**
     * A unique URL identifying the Vault cluster.
     */
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    /**
     * The state of the Vault cluster.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Tier of the HCP Vault cluster. Valid options for tiers - `dev`, `starterSmall`, `standardSmall`, `standardMedium`, `standardLarge`, `plusSmall`, `plusMedium`, `plusLarge`. See [pricing information](https://cloud.hashicorp.com/pricing/vault).
     */
    public readonly tier!: pulumi.Output<string>;
    /**
     * The private URL for the Vault cluster.
     */
    public /*out*/ readonly vaultPrivateEndpointUrl!: pulumi.Output<string>;
    /**
     * The public URL for the Vault cluster. This will be empty if `publicEndpoint` is `false`.
     */
    public /*out*/ readonly vaultPublicEndpointUrl!: pulumi.Output<string>;
    /**
     * The Vault version of the cluster.
     */
    public /*out*/ readonly vaultVersion!: pulumi.Output<string>;

    /**
     * Create a VaultCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VaultClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VaultClusterArgs | VaultClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VaultClusterState | undefined;
            resourceInputs["auditLogConfig"] = state ? state.auditLogConfig : undefined;
            resourceInputs["cloudProvider"] = state ? state.cloudProvider : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["hvnId"] = state ? state.hvnId : undefined;
            resourceInputs["metricsConfig"] = state ? state.metricsConfig : undefined;
            resourceInputs["minVaultVersion"] = state ? state.minVaultVersion : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
            resourceInputs["pathsFilters"] = state ? state.pathsFilters : undefined;
            resourceInputs["primaryLink"] = state ? state.primaryLink : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["publicEndpoint"] = state ? state.publicEndpoint : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["selfLink"] = state ? state.selfLink : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["tier"] = state ? state.tier : undefined;
            resourceInputs["vaultPrivateEndpointUrl"] = state ? state.vaultPrivateEndpointUrl : undefined;
            resourceInputs["vaultPublicEndpointUrl"] = state ? state.vaultPublicEndpointUrl : undefined;
            resourceInputs["vaultVersion"] = state ? state.vaultVersion : undefined;
        } else {
            const args = argsOrState as VaultClusterArgs | undefined;
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if ((!args || args.hvnId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hvnId'");
            }
            resourceInputs["auditLogConfig"] = args ? args.auditLogConfig : undefined;
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["hvnId"] = args ? args.hvnId : undefined;
            resourceInputs["metricsConfig"] = args ? args.metricsConfig : undefined;
            resourceInputs["minVaultVersion"] = args ? args.minVaultVersion : undefined;
            resourceInputs["pathsFilters"] = args ? args.pathsFilters : undefined;
            resourceInputs["primaryLink"] = args ? args.primaryLink : undefined;
            resourceInputs["publicEndpoint"] = args ? args.publicEndpoint : undefined;
            resourceInputs["tier"] = args ? args.tier : undefined;
            resourceInputs["cloudProvider"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["namespace"] = undefined /*out*/;
            resourceInputs["organizationId"] = undefined /*out*/;
            resourceInputs["projectId"] = undefined /*out*/;
            resourceInputs["region"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["vaultPrivateEndpointUrl"] = undefined /*out*/;
            resourceInputs["vaultPublicEndpointUrl"] = undefined /*out*/;
            resourceInputs["vaultVersion"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VaultCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VaultCluster resources.
 */
export interface VaultClusterState {
    /**
     * The audit logs configuration for export. (https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)
     */
    auditLogConfig?: pulumi.Input<inputs.VaultClusterAuditLogConfig>;
    /**
     * The provider where the HCP Vault cluster is located.
     */
    cloudProvider?: pulumi.Input<string>;
    /**
     * The ID of the HCP Vault cluster.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The time that the Vault cluster was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The ID of the HVN this HCP Vault cluster is associated to.
     */
    hvnId?: pulumi.Input<string>;
    /**
     * The metrics configuration for export. (https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)
     */
    metricsConfig?: pulumi.Input<inputs.VaultClusterMetricsConfig>;
    /**
     * The minimum Vault version to use when creating the cluster. If not specified, it is defaulted to the version that is currently recommended by HCP.
     */
    minVaultVersion?: pulumi.Input<string>;
    /**
     * The name of the customer namespace this HCP Vault cluster is located in.
     */
    namespace?: pulumi.Input<string>;
    /**
     * The ID of the organization this HCP Vault cluster is located in.
     */
    organizationId?: pulumi.Input<string>;
    /**
     * The performance replication [paths filter](https://learn.hashicorp.com/tutorials/vault/paths-filter). Applies to performance replication secondaries only and operates in "deny" mode only.
     */
    pathsFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The `selfLink` of the HCP Vault Plus tier cluster which is the primary in the performance replication setup with this HCP Vault Plus tier cluster. If not specified, it is a standalone Plus tier HCP Vault cluster.
     */
    primaryLink?: pulumi.Input<string>;
    /**
     * The ID of the project this HCP Vault cluster is located in.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Denotes that the cluster has a public endpoint. Defaults to false.
     */
    publicEndpoint?: pulumi.Input<boolean>;
    /**
     * The region where the HCP Vault cluster is located.
     */
    region?: pulumi.Input<string>;
    /**
     * A unique URL identifying the Vault cluster.
     */
    selfLink?: pulumi.Input<string>;
    /**
     * The state of the Vault cluster.
     */
    state?: pulumi.Input<string>;
    /**
     * Tier of the HCP Vault cluster. Valid options for tiers - `dev`, `starterSmall`, `standardSmall`, `standardMedium`, `standardLarge`, `plusSmall`, `plusMedium`, `plusLarge`. See [pricing information](https://cloud.hashicorp.com/pricing/vault).
     */
    tier?: pulumi.Input<string>;
    /**
     * The private URL for the Vault cluster.
     */
    vaultPrivateEndpointUrl?: pulumi.Input<string>;
    /**
     * The public URL for the Vault cluster. This will be empty if `publicEndpoint` is `false`.
     */
    vaultPublicEndpointUrl?: pulumi.Input<string>;
    /**
     * The Vault version of the cluster.
     */
    vaultVersion?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VaultCluster resource.
 */
export interface VaultClusterArgs {
    /**
     * The audit logs configuration for export. (https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)
     */
    auditLogConfig?: pulumi.Input<inputs.VaultClusterAuditLogConfig>;
    /**
     * The ID of the HCP Vault cluster.
     */
    clusterId: pulumi.Input<string>;
    /**
     * The ID of the HVN this HCP Vault cluster is associated to.
     */
    hvnId: pulumi.Input<string>;
    /**
     * The metrics configuration for export. (https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)
     */
    metricsConfig?: pulumi.Input<inputs.VaultClusterMetricsConfig>;
    /**
     * The minimum Vault version to use when creating the cluster. If not specified, it is defaulted to the version that is currently recommended by HCP.
     */
    minVaultVersion?: pulumi.Input<string>;
    /**
     * The performance replication [paths filter](https://learn.hashicorp.com/tutorials/vault/paths-filter). Applies to performance replication secondaries only and operates in "deny" mode only.
     */
    pathsFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The `selfLink` of the HCP Vault Plus tier cluster which is the primary in the performance replication setup with this HCP Vault Plus tier cluster. If not specified, it is a standalone Plus tier HCP Vault cluster.
     */
    primaryLink?: pulumi.Input<string>;
    /**
     * Denotes that the cluster has a public endpoint. Defaults to false.
     */
    publicEndpoint?: pulumi.Input<boolean>;
    /**
     * Tier of the HCP Vault cluster. Valid options for tiers - `dev`, `starterSmall`, `standardSmall`, `standardMedium`, `standardLarge`, `plusSmall`, `plusMedium`, `plusLarge`. See [pricing information](https://cloud.hashicorp.com/pricing/vault).
     */
    tier?: pulumi.Input<string>;
}
