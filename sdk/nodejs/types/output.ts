// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface GetPackerImageIterationBuild {
    /**
     * Name of the cloud provider this image is stored-in, if any.
     */
    cloudProvider: string;
    /**
     * Name of the builder that built this. Ex: 'amazon-ebs.example'.
     */
    componentType: string;
    /**
     * Creation time of this build.
     */
    createdAt: string;
    /**
     * HCP ID of this build.
     */
    id: string;
    images: outputs.GetPackerImageIterationBuildImage[];
    /**
     * Labels for this build.
     */
    labels: {[key: string]: string};
    /**
     * Packer generated UUID of this build.
     */
    packerRunUuid: string;
    /**
     * Status of this build. DONE means that all images tied to this build were successfully built.
     */
    status: string;
    /**
     * Time this build was last updated.
     */
    updatedAt: string;
}

export interface GetPackerImageIterationBuildImage {
    /**
     * Creation time of this iteration
     */
    createdAt: string;
    /**
     * The ID of this resource.
     */
    id: string;
    imageId: string;
    region: string;
}

export interface GetVaultClusterAuditLogConfig {
    /**
     * Datadog region for streaming audit logs
     */
    datadogRegion: string;
    /**
     * Grafana endpoint for streaming audit logs
     */
    grafanaEndpoint: string;
    /**
     * Grafana user for streaming audit logs
     */
    grafanaUser: string;
    /**
     * Splunk endpoint for streaming audit logs
     */
    splunkHecendpoint: string;
}

export interface GetVaultClusterMajorVersionUpgradeConfig {
    maintenanceWindowDay: string;
    maintenanceWindowTime: string;
    upgradeType: string;
}

export interface GetVaultClusterMetricsConfig {
    /**
     * Datadog region for streaming metrics
     */
    datadogRegion: string;
    /**
     * Grafana endpoint for streaming metrics
     */
    grafanaEndpoint: string;
    /**
     * Grafana user for streaming metrics
     */
    grafanaUser: string;
    /**
     * Splunk endpoint for streaming metrics
     */
    splunkHecendpoint: string;
}

export interface VaultClusterAuditLogConfig {
    /**
     * Datadog api key for streaming audit logs
     */
    datadogApiKey?: string;
    /**
     * Datadog region for streaming audit logs
     */
    datadogRegion?: string;
    /**
     * Grafana endpoint for streaming audit logs
     */
    grafanaEndpoint?: string;
    /**
     * Grafana password for streaming audit logs
     */
    grafanaPassword?: string;
    /**
     * Grafana user for streaming audit logs
     */
    grafanaUser?: string;
    /**
     * Splunk endpoint for streaming audit logs
     */
    splunkHecendpoint?: string;
    /**
     * Splunk token for streaming audit logs
     */
    splunkToken?: string;
}

export interface VaultClusterMajorVersionUpgradeConfig {
    /**
     * The maintenance day of the week for scheduled upgrades. Valid options for maintenance window day - `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`
     */
    maintenanceWindowDay?: string;
    /**
     * The maintenance time frame for scheduled upgrades. Valid options for maintenance window time - `WINDOW_12AM_4AM`, `WINDOW_6AM_10AM`, `WINDOW_12PM_4PM`, `WINDOW_6PM_10PM`
     */
    maintenanceWindowTime?: string;
    /**
     * The major upgrade type for the cluster. Valid options for upgrade type - `AUTOMATIC`, `SCHEDULED`, `MANUAL`
     */
    upgradeType: string;
}

export interface VaultClusterMetricsConfig {
    /**
     * Datadog api key for streaming metrics
     */
    datadogApiKey?: string;
    /**
     * Datadog region for streaming metrics
     */
    datadogRegion?: string;
    /**
     * Grafana endpoint for streaming metrics
     */
    grafanaEndpoint?: string;
    /**
     * Grafana password for streaming metrics
     */
    grafanaPassword?: string;
    /**
     * Grafana user for streaming metrics
     */
    grafanaUser?: string;
    /**
     * Splunk endpoint for streaming metrics
     */
    splunkHecendpoint?: string;
    /**
     * Splunk token for streaming metrics
     */
    splunkToken?: string;
}
