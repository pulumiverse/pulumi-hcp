// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hcp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The agent config Kubernetes secret data source provides Consul agents running in Kubernetes the configuration needed to connect to the Consul cluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/grapl-security/pulumi-hcp/sdk/go/hcp"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := hcp.GetConsulAgentKubernetesSecret(ctx, &GetConsulAgentKubernetesSecretArgs{
// 			ClusterId: _var.Cluster_id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetConsulAgentKubernetesSecret(ctx *pulumi.Context, args *GetConsulAgentKubernetesSecretArgs, opts ...pulumi.InvokeOption) (*GetConsulAgentKubernetesSecretResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetConsulAgentKubernetesSecretResult
	err := ctx.Invoke("hcp:index/getConsulAgentKubernetesSecret:getConsulAgentKubernetesSecret", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConsulAgentKubernetesSecret.
type GetConsulAgentKubernetesSecretArgs struct {
	// The ID of the HCP Consul cluster.
	ClusterId string `pulumi:"clusterId"`
}

// A collection of values returned by getConsulAgentKubernetesSecret.
type GetConsulAgentKubernetesSecretResult struct {
	// The ID of the HCP Consul cluster.
	ClusterId string `pulumi:"clusterId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Consul agent configuration in the format of a Kubernetes secret (YAML).
	Secret string `pulumi:"secret"`
}

func GetConsulAgentKubernetesSecretOutput(ctx *pulumi.Context, args GetConsulAgentKubernetesSecretOutputArgs, opts ...pulumi.InvokeOption) GetConsulAgentKubernetesSecretResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetConsulAgentKubernetesSecretResult, error) {
			args := v.(GetConsulAgentKubernetesSecretArgs)
			r, err := GetConsulAgentKubernetesSecret(ctx, &args, opts...)
			var s GetConsulAgentKubernetesSecretResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetConsulAgentKubernetesSecretResultOutput)
}

// A collection of arguments for invoking getConsulAgentKubernetesSecret.
type GetConsulAgentKubernetesSecretOutputArgs struct {
	// The ID of the HCP Consul cluster.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
}

func (GetConsulAgentKubernetesSecretOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConsulAgentKubernetesSecretArgs)(nil)).Elem()
}

// A collection of values returned by getConsulAgentKubernetesSecret.
type GetConsulAgentKubernetesSecretResultOutput struct{ *pulumi.OutputState }

func (GetConsulAgentKubernetesSecretResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConsulAgentKubernetesSecretResult)(nil)).Elem()
}

func (o GetConsulAgentKubernetesSecretResultOutput) ToGetConsulAgentKubernetesSecretResultOutput() GetConsulAgentKubernetesSecretResultOutput {
	return o
}

func (o GetConsulAgentKubernetesSecretResultOutput) ToGetConsulAgentKubernetesSecretResultOutputWithContext(ctx context.Context) GetConsulAgentKubernetesSecretResultOutput {
	return o
}

// The ID of the HCP Consul cluster.
func (o GetConsulAgentKubernetesSecretResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConsulAgentKubernetesSecretResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetConsulAgentKubernetesSecretResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConsulAgentKubernetesSecretResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Consul agent configuration in the format of a Kubernetes secret (YAML).
func (o GetConsulAgentKubernetesSecretResultOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetConsulAgentKubernetesSecretResult) string { return v.Secret }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetConsulAgentKubernetesSecretResultOutput{})
}
