// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hcp

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/grapl-security/pulumi-hcp/sdk/go/hcp"
// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2"
// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2transitgateway"
// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ram"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		main, err := hcp.NewHvn(ctx, "main", &hcp.HvnArgs{
// 			HvnId:         pulumi.String("main-hvn"),
// 			CloudProvider: pulumi.String("aws"),
// 			Region:        pulumi.String("us-west-2"),
// 			CidrBlock:     pulumi.String("172.25.16.0/20"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleVpc, err := ec2.NewVpc(ctx, "exampleVpc", &ec2.VpcArgs{
// 			CidrBlock: pulumi.String("172.31.0.0/16"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleTransitGateway, err := ec2transitgateway.NewTransitGateway(ctx, "exampleTransitGateway", &ec2transitgateway.TransitGatewayArgs{
// 			Tags: pulumi.StringMap{
// 				"Name": pulumi.String("example-tgw"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleResourceShare, err := ram.NewResourceShare(ctx, "exampleResourceShare", &ram.ResourceShareArgs{
// 			AllowExternalPrincipals: pulumi.Bool(true),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		examplePrincipalAssociation, err := ram.NewPrincipalAssociation(ctx, "examplePrincipalAssociation", &ram.PrincipalAssociationArgs{
// 			ResourceShareArn: exampleResourceShare.Arn,
// 			Principal:        main.ProviderAccountId,
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleResourceAssociation, err := ram.NewResourceAssociation(ctx, "exampleResourceAssociation", &ram.ResourceAssociationArgs{
// 			ResourceShareArn: exampleResourceShare.Arn,
// 			ResourceArn:      exampleTransitGateway.Arn,
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleAwsTransitGatewayAttachment, err := hcp.NewAwsTransitGatewayAttachment(ctx, "exampleAwsTransitGatewayAttachment", &hcp.AwsTransitGatewayAttachmentArgs{
// 			HvnId:                      main.HvnId,
// 			TransitGatewayAttachmentId: pulumi.String("example-tgw-attachment"),
// 			TransitGatewayId:           exampleTransitGateway.ID(),
// 			ResourceShareArn:           exampleResourceShare.Arn,
// 		}, pulumi.DependsOn([]pulumi.Resource{
// 			examplePrincipalAssociation,
// 			exampleResourceAssociation,
// 		}))
// 		if err != nil {
// 			return err
// 		}
// 		_, err = hcp.NewHvnRoute(ctx, "route", &hcp.HvnRouteArgs{
// 			HvnLink:         main.SelfLink,
// 			HvnRouteId:      pulumi.String("hvn-to-tgw-attachment"),
// 			DestinationCidr: exampleVpc.CidrBlock,
// 			TargetLink:      exampleAwsTransitGatewayAttachment.SelfLink,
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = ec2transitgateway.NewVpcAttachmentAccepter(ctx, "exampleVpcAttachmentAccepter", &ec2transitgateway.VpcAttachmentAccepterArgs{
// 			TransitGatewayAttachmentId: exampleAwsTransitGatewayAttachment.ProviderTransitGatewayAttachmentId,
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// # The import ID is {hvn_id}:{transit_gateway_attachment_id}
//
// ```sh
//  $ pulumi import hcp:index/awsTransitGatewayAttachment:AwsTransitGatewayAttachment example main-hvn:example-tgw-attachment
// ```
type AwsTransitGatewayAttachment struct {
	pulumi.CustomResourceState

	// The time that the transit gateway attachment was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The time after which the transit gateway attachment will be considered expired if it hasn't transitioned into `ACCEPTED` or `ACTIVE` state.
	ExpiresAt pulumi.StringOutput `pulumi:"expiresAt"`
	// The ID of the HashiCorp Virtual Network (HVN).
	HvnId pulumi.StringOutput `pulumi:"hvnId"`
	// The ID of the HCP organization where the transit gateway attachment is located. Always matches the HVN's organization.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// The ID of the HCP project where the transit gateway attachment is located. Always matches the HVN's project.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The transit gateway attachment ID used by AWS.
	ProviderTransitGatewayAttachmentId pulumi.StringOutput `pulumi:"providerTransitGatewayAttachmentId"`
	// The Amazon Resource Name (ARN) of the Resource Share that is needed to grant HCP access to the transit gateway in AWS.
	// The Resource Share should be associated with the HCP AWS account principal (see
	// [aws_ram_principal_association](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ram_principal_association))
	// and the transit gateway resource (see
	// [aws_ram_resource_association](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ram_resource_association))
	ResourceShareArn pulumi.StringOutput `pulumi:"resourceShareArn"`
	// A unique URL identifying the transit gateway attachment.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// The state of the transit gateway attachment.
	State pulumi.StringOutput `pulumi:"state"`
	// The user-settable name of the transit gateway attachment in HCP.
	TransitGatewayAttachmentId pulumi.StringOutput `pulumi:"transitGatewayAttachmentId"`
	// The ID of the user-owned transit gateway in AWS. The AWS region of the transit gateway must match the HVN.
	TransitGatewayId pulumi.StringOutput `pulumi:"transitGatewayId"`
}

// NewAwsTransitGatewayAttachment registers a new resource with the given unique name, arguments, and options.
func NewAwsTransitGatewayAttachment(ctx *pulumi.Context,
	name string, args *AwsTransitGatewayAttachmentArgs, opts ...pulumi.ResourceOption) (*AwsTransitGatewayAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.HvnId == nil {
		return nil, errors.New("invalid value for required argument 'HvnId'")
	}
	if args.ResourceShareArn == nil {
		return nil, errors.New("invalid value for required argument 'ResourceShareArn'")
	}
	if args.TransitGatewayAttachmentId == nil {
		return nil, errors.New("invalid value for required argument 'TransitGatewayAttachmentId'")
	}
	if args.TransitGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'TransitGatewayId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AwsTransitGatewayAttachment
	err := ctx.RegisterResource("hcp:index/awsTransitGatewayAttachment:AwsTransitGatewayAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsTransitGatewayAttachment gets an existing AwsTransitGatewayAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsTransitGatewayAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsTransitGatewayAttachmentState, opts ...pulumi.ResourceOption) (*AwsTransitGatewayAttachment, error) {
	var resource AwsTransitGatewayAttachment
	err := ctx.ReadResource("hcp:index/awsTransitGatewayAttachment:AwsTransitGatewayAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsTransitGatewayAttachment resources.
type awsTransitGatewayAttachmentState struct {
	// The time that the transit gateway attachment was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The time after which the transit gateway attachment will be considered expired if it hasn't transitioned into `ACCEPTED` or `ACTIVE` state.
	ExpiresAt *string `pulumi:"expiresAt"`
	// The ID of the HashiCorp Virtual Network (HVN).
	HvnId *string `pulumi:"hvnId"`
	// The ID of the HCP organization where the transit gateway attachment is located. Always matches the HVN's organization.
	OrganizationId *string `pulumi:"organizationId"`
	// The ID of the HCP project where the transit gateway attachment is located. Always matches the HVN's project.
	ProjectId *string `pulumi:"projectId"`
	// The transit gateway attachment ID used by AWS.
	ProviderTransitGatewayAttachmentId *string `pulumi:"providerTransitGatewayAttachmentId"`
	// The Amazon Resource Name (ARN) of the Resource Share that is needed to grant HCP access to the transit gateway in AWS.
	// The Resource Share should be associated with the HCP AWS account principal (see
	// [aws_ram_principal_association](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ram_principal_association))
	// and the transit gateway resource (see
	// [aws_ram_resource_association](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ram_resource_association))
	ResourceShareArn *string `pulumi:"resourceShareArn"`
	// A unique URL identifying the transit gateway attachment.
	SelfLink *string `pulumi:"selfLink"`
	// The state of the transit gateway attachment.
	State *string `pulumi:"state"`
	// The user-settable name of the transit gateway attachment in HCP.
	TransitGatewayAttachmentId *string `pulumi:"transitGatewayAttachmentId"`
	// The ID of the user-owned transit gateway in AWS. The AWS region of the transit gateway must match the HVN.
	TransitGatewayId *string `pulumi:"transitGatewayId"`
}

type AwsTransitGatewayAttachmentState struct {
	// The time that the transit gateway attachment was created.
	CreatedAt pulumi.StringPtrInput
	// The time after which the transit gateway attachment will be considered expired if it hasn't transitioned into `ACCEPTED` or `ACTIVE` state.
	ExpiresAt pulumi.StringPtrInput
	// The ID of the HashiCorp Virtual Network (HVN).
	HvnId pulumi.StringPtrInput
	// The ID of the HCP organization where the transit gateway attachment is located. Always matches the HVN's organization.
	OrganizationId pulumi.StringPtrInput
	// The ID of the HCP project where the transit gateway attachment is located. Always matches the HVN's project.
	ProjectId pulumi.StringPtrInput
	// The transit gateway attachment ID used by AWS.
	ProviderTransitGatewayAttachmentId pulumi.StringPtrInput
	// The Amazon Resource Name (ARN) of the Resource Share that is needed to grant HCP access to the transit gateway in AWS.
	// The Resource Share should be associated with the HCP AWS account principal (see
	// [aws_ram_principal_association](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ram_principal_association))
	// and the transit gateway resource (see
	// [aws_ram_resource_association](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ram_resource_association))
	ResourceShareArn pulumi.StringPtrInput
	// A unique URL identifying the transit gateway attachment.
	SelfLink pulumi.StringPtrInput
	// The state of the transit gateway attachment.
	State pulumi.StringPtrInput
	// The user-settable name of the transit gateway attachment in HCP.
	TransitGatewayAttachmentId pulumi.StringPtrInput
	// The ID of the user-owned transit gateway in AWS. The AWS region of the transit gateway must match the HVN.
	TransitGatewayId pulumi.StringPtrInput
}

func (AwsTransitGatewayAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsTransitGatewayAttachmentState)(nil)).Elem()
}

type awsTransitGatewayAttachmentArgs struct {
	// The ID of the HashiCorp Virtual Network (HVN).
	HvnId string `pulumi:"hvnId"`
	// The Amazon Resource Name (ARN) of the Resource Share that is needed to grant HCP access to the transit gateway in AWS.
	// The Resource Share should be associated with the HCP AWS account principal (see
	// [aws_ram_principal_association](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ram_principal_association))
	// and the transit gateway resource (see
	// [aws_ram_resource_association](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ram_resource_association))
	ResourceShareArn string `pulumi:"resourceShareArn"`
	// The user-settable name of the transit gateway attachment in HCP.
	TransitGatewayAttachmentId string `pulumi:"transitGatewayAttachmentId"`
	// The ID of the user-owned transit gateway in AWS. The AWS region of the transit gateway must match the HVN.
	TransitGatewayId string `pulumi:"transitGatewayId"`
}

// The set of arguments for constructing a AwsTransitGatewayAttachment resource.
type AwsTransitGatewayAttachmentArgs struct {
	// The ID of the HashiCorp Virtual Network (HVN).
	HvnId pulumi.StringInput
	// The Amazon Resource Name (ARN) of the Resource Share that is needed to grant HCP access to the transit gateway in AWS.
	// The Resource Share should be associated with the HCP AWS account principal (see
	// [aws_ram_principal_association](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ram_principal_association))
	// and the transit gateway resource (see
	// [aws_ram_resource_association](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ram_resource_association))
	ResourceShareArn pulumi.StringInput
	// The user-settable name of the transit gateway attachment in HCP.
	TransitGatewayAttachmentId pulumi.StringInput
	// The ID of the user-owned transit gateway in AWS. The AWS region of the transit gateway must match the HVN.
	TransitGatewayId pulumi.StringInput
}

func (AwsTransitGatewayAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsTransitGatewayAttachmentArgs)(nil)).Elem()
}

type AwsTransitGatewayAttachmentInput interface {
	pulumi.Input

	ToAwsTransitGatewayAttachmentOutput() AwsTransitGatewayAttachmentOutput
	ToAwsTransitGatewayAttachmentOutputWithContext(ctx context.Context) AwsTransitGatewayAttachmentOutput
}

func (*AwsTransitGatewayAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsTransitGatewayAttachment)(nil)).Elem()
}

func (i *AwsTransitGatewayAttachment) ToAwsTransitGatewayAttachmentOutput() AwsTransitGatewayAttachmentOutput {
	return i.ToAwsTransitGatewayAttachmentOutputWithContext(context.Background())
}

func (i *AwsTransitGatewayAttachment) ToAwsTransitGatewayAttachmentOutputWithContext(ctx context.Context) AwsTransitGatewayAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsTransitGatewayAttachmentOutput)
}

// AwsTransitGatewayAttachmentArrayInput is an input type that accepts AwsTransitGatewayAttachmentArray and AwsTransitGatewayAttachmentArrayOutput values.
// You can construct a concrete instance of `AwsTransitGatewayAttachmentArrayInput` via:
//
//          AwsTransitGatewayAttachmentArray{ AwsTransitGatewayAttachmentArgs{...} }
type AwsTransitGatewayAttachmentArrayInput interface {
	pulumi.Input

	ToAwsTransitGatewayAttachmentArrayOutput() AwsTransitGatewayAttachmentArrayOutput
	ToAwsTransitGatewayAttachmentArrayOutputWithContext(context.Context) AwsTransitGatewayAttachmentArrayOutput
}

type AwsTransitGatewayAttachmentArray []AwsTransitGatewayAttachmentInput

func (AwsTransitGatewayAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsTransitGatewayAttachment)(nil)).Elem()
}

func (i AwsTransitGatewayAttachmentArray) ToAwsTransitGatewayAttachmentArrayOutput() AwsTransitGatewayAttachmentArrayOutput {
	return i.ToAwsTransitGatewayAttachmentArrayOutputWithContext(context.Background())
}

func (i AwsTransitGatewayAttachmentArray) ToAwsTransitGatewayAttachmentArrayOutputWithContext(ctx context.Context) AwsTransitGatewayAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsTransitGatewayAttachmentArrayOutput)
}

// AwsTransitGatewayAttachmentMapInput is an input type that accepts AwsTransitGatewayAttachmentMap and AwsTransitGatewayAttachmentMapOutput values.
// You can construct a concrete instance of `AwsTransitGatewayAttachmentMapInput` via:
//
//          AwsTransitGatewayAttachmentMap{ "key": AwsTransitGatewayAttachmentArgs{...} }
type AwsTransitGatewayAttachmentMapInput interface {
	pulumi.Input

	ToAwsTransitGatewayAttachmentMapOutput() AwsTransitGatewayAttachmentMapOutput
	ToAwsTransitGatewayAttachmentMapOutputWithContext(context.Context) AwsTransitGatewayAttachmentMapOutput
}

type AwsTransitGatewayAttachmentMap map[string]AwsTransitGatewayAttachmentInput

func (AwsTransitGatewayAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsTransitGatewayAttachment)(nil)).Elem()
}

func (i AwsTransitGatewayAttachmentMap) ToAwsTransitGatewayAttachmentMapOutput() AwsTransitGatewayAttachmentMapOutput {
	return i.ToAwsTransitGatewayAttachmentMapOutputWithContext(context.Background())
}

func (i AwsTransitGatewayAttachmentMap) ToAwsTransitGatewayAttachmentMapOutputWithContext(ctx context.Context) AwsTransitGatewayAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsTransitGatewayAttachmentMapOutput)
}

type AwsTransitGatewayAttachmentOutput struct{ *pulumi.OutputState }

func (AwsTransitGatewayAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsTransitGatewayAttachment)(nil)).Elem()
}

func (o AwsTransitGatewayAttachmentOutput) ToAwsTransitGatewayAttachmentOutput() AwsTransitGatewayAttachmentOutput {
	return o
}

func (o AwsTransitGatewayAttachmentOutput) ToAwsTransitGatewayAttachmentOutputWithContext(ctx context.Context) AwsTransitGatewayAttachmentOutput {
	return o
}

// The time that the transit gateway attachment was created.
func (o AwsTransitGatewayAttachmentOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsTransitGatewayAttachment) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The time after which the transit gateway attachment will be considered expired if it hasn't transitioned into `ACCEPTED` or `ACTIVE` state.
func (o AwsTransitGatewayAttachmentOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsTransitGatewayAttachment) pulumi.StringOutput { return v.ExpiresAt }).(pulumi.StringOutput)
}

// The ID of the HashiCorp Virtual Network (HVN).
func (o AwsTransitGatewayAttachmentOutput) HvnId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsTransitGatewayAttachment) pulumi.StringOutput { return v.HvnId }).(pulumi.StringOutput)
}

// The ID of the HCP organization where the transit gateway attachment is located. Always matches the HVN's organization.
func (o AwsTransitGatewayAttachmentOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsTransitGatewayAttachment) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// The ID of the HCP project where the transit gateway attachment is located. Always matches the HVN's project.
func (o AwsTransitGatewayAttachmentOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsTransitGatewayAttachment) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The transit gateway attachment ID used by AWS.
func (o AwsTransitGatewayAttachmentOutput) ProviderTransitGatewayAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsTransitGatewayAttachment) pulumi.StringOutput { return v.ProviderTransitGatewayAttachmentId }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the Resource Share that is needed to grant HCP access to the transit gateway in AWS.
// The Resource Share should be associated with the HCP AWS account principal (see
// [aws_ram_principal_association](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ram_principal_association))
// and the transit gateway resource (see
// [aws_ram_resource_association](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ram_resource_association))
func (o AwsTransitGatewayAttachmentOutput) ResourceShareArn() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsTransitGatewayAttachment) pulumi.StringOutput { return v.ResourceShareArn }).(pulumi.StringOutput)
}

// A unique URL identifying the transit gateway attachment.
func (o AwsTransitGatewayAttachmentOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsTransitGatewayAttachment) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// The state of the transit gateway attachment.
func (o AwsTransitGatewayAttachmentOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsTransitGatewayAttachment) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The user-settable name of the transit gateway attachment in HCP.
func (o AwsTransitGatewayAttachmentOutput) TransitGatewayAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsTransitGatewayAttachment) pulumi.StringOutput { return v.TransitGatewayAttachmentId }).(pulumi.StringOutput)
}

// The ID of the user-owned transit gateway in AWS. The AWS region of the transit gateway must match the HVN.
func (o AwsTransitGatewayAttachmentOutput) TransitGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsTransitGatewayAttachment) pulumi.StringOutput { return v.TransitGatewayId }).(pulumi.StringOutput)
}

type AwsTransitGatewayAttachmentArrayOutput struct{ *pulumi.OutputState }

func (AwsTransitGatewayAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsTransitGatewayAttachment)(nil)).Elem()
}

func (o AwsTransitGatewayAttachmentArrayOutput) ToAwsTransitGatewayAttachmentArrayOutput() AwsTransitGatewayAttachmentArrayOutput {
	return o
}

func (o AwsTransitGatewayAttachmentArrayOutput) ToAwsTransitGatewayAttachmentArrayOutputWithContext(ctx context.Context) AwsTransitGatewayAttachmentArrayOutput {
	return o
}

func (o AwsTransitGatewayAttachmentArrayOutput) Index(i pulumi.IntInput) AwsTransitGatewayAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsTransitGatewayAttachment {
		return vs[0].([]*AwsTransitGatewayAttachment)[vs[1].(int)]
	}).(AwsTransitGatewayAttachmentOutput)
}

type AwsTransitGatewayAttachmentMapOutput struct{ *pulumi.OutputState }

func (AwsTransitGatewayAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsTransitGatewayAttachment)(nil)).Elem()
}

func (o AwsTransitGatewayAttachmentMapOutput) ToAwsTransitGatewayAttachmentMapOutput() AwsTransitGatewayAttachmentMapOutput {
	return o
}

func (o AwsTransitGatewayAttachmentMapOutput) ToAwsTransitGatewayAttachmentMapOutputWithContext(ctx context.Context) AwsTransitGatewayAttachmentMapOutput {
	return o
}

func (o AwsTransitGatewayAttachmentMapOutput) MapIndex(k pulumi.StringInput) AwsTransitGatewayAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsTransitGatewayAttachment {
		return vs[0].(map[string]*AwsTransitGatewayAttachment)[vs[1].(string)]
	}).(AwsTransitGatewayAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsTransitGatewayAttachmentInput)(nil)).Elem(), &AwsTransitGatewayAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsTransitGatewayAttachmentArrayInput)(nil)).Elem(), AwsTransitGatewayAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsTransitGatewayAttachmentMapInput)(nil)).Elem(), AwsTransitGatewayAttachmentMap{})
	pulumi.RegisterOutputType(AwsTransitGatewayAttachmentOutput{})
	pulumi.RegisterOutputType(AwsTransitGatewayAttachmentArrayOutput{})
	pulumi.RegisterOutputType(AwsTransitGatewayAttachmentMapOutput{})
}
