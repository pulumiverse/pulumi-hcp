// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hcp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS network peering data source provides information about an existing network peering between an HVN and a peer AWS VPC.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-hcp/sdk/go/hcp"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := hcp.LookupAwsNetworkPeering(ctx, &GetAwsNetworkPeeringArgs{
//				HvnId:              _var.Hvn_id,
//				PeeringId:          _var.Peering_id,
//				WaitForActiveState: pulumi.BoolRef(true),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAwsNetworkPeering(ctx *pulumi.Context, args *LookupAwsNetworkPeeringArgs, opts ...pulumi.InvokeOption) (*LookupAwsNetworkPeeringResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupAwsNetworkPeeringResult
	err := ctx.Invoke("hcp:index/getAwsNetworkPeering:getAwsNetworkPeering", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAwsNetworkPeering.
type LookupAwsNetworkPeeringArgs struct {
	// The ID of the HashiCorp Virtual Network (HVN).
	HvnId string `pulumi:"hvnId"`
	// The ID of the network peering.
	PeeringId          string `pulumi:"peeringId"`
	WaitForActiveState *bool  `pulumi:"waitForActiveState"`
}

// A collection of values returned by getAwsNetworkPeering.
type LookupAwsNetworkPeeringResult struct {
	// The time that the network peering was created.
	CreatedAt string `pulumi:"createdAt"`
	// The time after which the network peering will be considered expired if it hasn't transitioned into `ACCEPTED` or `ACTIVE` state.
	ExpiresAt string `pulumi:"expiresAt"`
	// The ID of the HashiCorp Virtual Network (HVN).
	HvnId string `pulumi:"hvnId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The ID of the HCP organization where the network peering is located. Always matches the HVN's organization.
	OrganizationId string `pulumi:"organizationId"`
	// The account ID of the peer VPC in AWS.
	PeerAccountId string `pulumi:"peerAccountId"`
	// The ID of the peer VPC in AWS.
	PeerVpcId string `pulumi:"peerVpcId"`
	// The region of the peer VPC in AWS.
	PeerVpcRegion string `pulumi:"peerVpcRegion"`
	// The ID of the network peering.
	PeeringId string `pulumi:"peeringId"`
	// The ID of the HCP project where the network peering is located. Always matches the HVN's project.
	ProjectId string `pulumi:"projectId"`
	// The peering connection ID used by AWS.
	ProviderPeeringId string `pulumi:"providerPeeringId"`
	// A unique URL identifying the network peering.
	SelfLink string `pulumi:"selfLink"`
	// The state of the network peering.
	State              string `pulumi:"state"`
	WaitForActiveState *bool  `pulumi:"waitForActiveState"`
}

func LookupAwsNetworkPeeringOutput(ctx *pulumi.Context, args LookupAwsNetworkPeeringOutputArgs, opts ...pulumi.InvokeOption) LookupAwsNetworkPeeringResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAwsNetworkPeeringResult, error) {
			args := v.(LookupAwsNetworkPeeringArgs)
			r, err := LookupAwsNetworkPeering(ctx, &args, opts...)
			var s LookupAwsNetworkPeeringResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAwsNetworkPeeringResultOutput)
}

// A collection of arguments for invoking getAwsNetworkPeering.
type LookupAwsNetworkPeeringOutputArgs struct {
	// The ID of the HashiCorp Virtual Network (HVN).
	HvnId pulumi.StringInput `pulumi:"hvnId"`
	// The ID of the network peering.
	PeeringId          pulumi.StringInput  `pulumi:"peeringId"`
	WaitForActiveState pulumi.BoolPtrInput `pulumi:"waitForActiveState"`
}

func (LookupAwsNetworkPeeringOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAwsNetworkPeeringArgs)(nil)).Elem()
}

// A collection of values returned by getAwsNetworkPeering.
type LookupAwsNetworkPeeringResultOutput struct{ *pulumi.OutputState }

func (LookupAwsNetworkPeeringResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAwsNetworkPeeringResult)(nil)).Elem()
}

func (o LookupAwsNetworkPeeringResultOutput) ToLookupAwsNetworkPeeringResultOutput() LookupAwsNetworkPeeringResultOutput {
	return o
}

func (o LookupAwsNetworkPeeringResultOutput) ToLookupAwsNetworkPeeringResultOutputWithContext(ctx context.Context) LookupAwsNetworkPeeringResultOutput {
	return o
}

// The time that the network peering was created.
func (o LookupAwsNetworkPeeringResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsNetworkPeeringResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The time after which the network peering will be considered expired if it hasn't transitioned into `ACCEPTED` or `ACTIVE` state.
func (o LookupAwsNetworkPeeringResultOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsNetworkPeeringResult) string { return v.ExpiresAt }).(pulumi.StringOutput)
}

// The ID of the HashiCorp Virtual Network (HVN).
func (o LookupAwsNetworkPeeringResultOutput) HvnId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsNetworkPeeringResult) string { return v.HvnId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAwsNetworkPeeringResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsNetworkPeeringResult) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the HCP organization where the network peering is located. Always matches the HVN's organization.
func (o LookupAwsNetworkPeeringResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsNetworkPeeringResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// The account ID of the peer VPC in AWS.
func (o LookupAwsNetworkPeeringResultOutput) PeerAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsNetworkPeeringResult) string { return v.PeerAccountId }).(pulumi.StringOutput)
}

// The ID of the peer VPC in AWS.
func (o LookupAwsNetworkPeeringResultOutput) PeerVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsNetworkPeeringResult) string { return v.PeerVpcId }).(pulumi.StringOutput)
}

// The region of the peer VPC in AWS.
func (o LookupAwsNetworkPeeringResultOutput) PeerVpcRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsNetworkPeeringResult) string { return v.PeerVpcRegion }).(pulumi.StringOutput)
}

// The ID of the network peering.
func (o LookupAwsNetworkPeeringResultOutput) PeeringId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsNetworkPeeringResult) string { return v.PeeringId }).(pulumi.StringOutput)
}

// The ID of the HCP project where the network peering is located. Always matches the HVN's project.
func (o LookupAwsNetworkPeeringResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsNetworkPeeringResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The peering connection ID used by AWS.
func (o LookupAwsNetworkPeeringResultOutput) ProviderPeeringId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsNetworkPeeringResult) string { return v.ProviderPeeringId }).(pulumi.StringOutput)
}

// A unique URL identifying the network peering.
func (o LookupAwsNetworkPeeringResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsNetworkPeeringResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

// The state of the network peering.
func (o LookupAwsNetworkPeeringResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsNetworkPeeringResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupAwsNetworkPeeringResultOutput) WaitForActiveState() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupAwsNetworkPeeringResult) *bool { return v.WaitForActiveState }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAwsNetworkPeeringResultOutput{})
}
