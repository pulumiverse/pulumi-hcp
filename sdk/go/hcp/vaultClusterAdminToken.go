// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hcp

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-hcp/sdk/go/hcp"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := hcp.NewVaultClusterAdminToken(ctx, "example", &hcp.VaultClusterAdminTokenArgs{
//				ClusterId: pulumi.String("test-vault-cluster"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type VaultClusterAdminToken struct {
	pulumi.CustomResourceState

	// The ID of the HCP Vault cluster.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// The time that the admin token was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The admin token of this HCP Vault cluster.
	Token pulumi.StringOutput `pulumi:"token"`
}

// NewVaultClusterAdminToken registers a new resource with the given unique name, arguments, and options.
func NewVaultClusterAdminToken(ctx *pulumi.Context,
	name string, args *VaultClusterAdminTokenArgs, opts ...pulumi.ResourceOption) (*VaultClusterAdminToken, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource VaultClusterAdminToken
	err := ctx.RegisterResource("hcp:index/vaultClusterAdminToken:VaultClusterAdminToken", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVaultClusterAdminToken gets an existing VaultClusterAdminToken resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVaultClusterAdminToken(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VaultClusterAdminTokenState, opts ...pulumi.ResourceOption) (*VaultClusterAdminToken, error) {
	var resource VaultClusterAdminToken
	err := ctx.ReadResource("hcp:index/vaultClusterAdminToken:VaultClusterAdminToken", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VaultClusterAdminToken resources.
type vaultClusterAdminTokenState struct {
	// The ID of the HCP Vault cluster.
	ClusterId *string `pulumi:"clusterId"`
	// The time that the admin token was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The admin token of this HCP Vault cluster.
	Token *string `pulumi:"token"`
}

type VaultClusterAdminTokenState struct {
	// The ID of the HCP Vault cluster.
	ClusterId pulumi.StringPtrInput
	// The time that the admin token was created.
	CreatedAt pulumi.StringPtrInput
	// The admin token of this HCP Vault cluster.
	Token pulumi.StringPtrInput
}

func (VaultClusterAdminTokenState) ElementType() reflect.Type {
	return reflect.TypeOf((*vaultClusterAdminTokenState)(nil)).Elem()
}

type vaultClusterAdminTokenArgs struct {
	// The ID of the HCP Vault cluster.
	ClusterId string `pulumi:"clusterId"`
}

// The set of arguments for constructing a VaultClusterAdminToken resource.
type VaultClusterAdminTokenArgs struct {
	// The ID of the HCP Vault cluster.
	ClusterId pulumi.StringInput
}

func (VaultClusterAdminTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vaultClusterAdminTokenArgs)(nil)).Elem()
}

type VaultClusterAdminTokenInput interface {
	pulumi.Input

	ToVaultClusterAdminTokenOutput() VaultClusterAdminTokenOutput
	ToVaultClusterAdminTokenOutputWithContext(ctx context.Context) VaultClusterAdminTokenOutput
}

func (*VaultClusterAdminToken) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultClusterAdminToken)(nil)).Elem()
}

func (i *VaultClusterAdminToken) ToVaultClusterAdminTokenOutput() VaultClusterAdminTokenOutput {
	return i.ToVaultClusterAdminTokenOutputWithContext(context.Background())
}

func (i *VaultClusterAdminToken) ToVaultClusterAdminTokenOutputWithContext(ctx context.Context) VaultClusterAdminTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultClusterAdminTokenOutput)
}

// VaultClusterAdminTokenArrayInput is an input type that accepts VaultClusterAdminTokenArray and VaultClusterAdminTokenArrayOutput values.
// You can construct a concrete instance of `VaultClusterAdminTokenArrayInput` via:
//
//	VaultClusterAdminTokenArray{ VaultClusterAdminTokenArgs{...} }
type VaultClusterAdminTokenArrayInput interface {
	pulumi.Input

	ToVaultClusterAdminTokenArrayOutput() VaultClusterAdminTokenArrayOutput
	ToVaultClusterAdminTokenArrayOutputWithContext(context.Context) VaultClusterAdminTokenArrayOutput
}

type VaultClusterAdminTokenArray []VaultClusterAdminTokenInput

func (VaultClusterAdminTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VaultClusterAdminToken)(nil)).Elem()
}

func (i VaultClusterAdminTokenArray) ToVaultClusterAdminTokenArrayOutput() VaultClusterAdminTokenArrayOutput {
	return i.ToVaultClusterAdminTokenArrayOutputWithContext(context.Background())
}

func (i VaultClusterAdminTokenArray) ToVaultClusterAdminTokenArrayOutputWithContext(ctx context.Context) VaultClusterAdminTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultClusterAdminTokenArrayOutput)
}

// VaultClusterAdminTokenMapInput is an input type that accepts VaultClusterAdminTokenMap and VaultClusterAdminTokenMapOutput values.
// You can construct a concrete instance of `VaultClusterAdminTokenMapInput` via:
//
//	VaultClusterAdminTokenMap{ "key": VaultClusterAdminTokenArgs{...} }
type VaultClusterAdminTokenMapInput interface {
	pulumi.Input

	ToVaultClusterAdminTokenMapOutput() VaultClusterAdminTokenMapOutput
	ToVaultClusterAdminTokenMapOutputWithContext(context.Context) VaultClusterAdminTokenMapOutput
}

type VaultClusterAdminTokenMap map[string]VaultClusterAdminTokenInput

func (VaultClusterAdminTokenMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VaultClusterAdminToken)(nil)).Elem()
}

func (i VaultClusterAdminTokenMap) ToVaultClusterAdminTokenMapOutput() VaultClusterAdminTokenMapOutput {
	return i.ToVaultClusterAdminTokenMapOutputWithContext(context.Background())
}

func (i VaultClusterAdminTokenMap) ToVaultClusterAdminTokenMapOutputWithContext(ctx context.Context) VaultClusterAdminTokenMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultClusterAdminTokenMapOutput)
}

type VaultClusterAdminTokenOutput struct{ *pulumi.OutputState }

func (VaultClusterAdminTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultClusterAdminToken)(nil)).Elem()
}

func (o VaultClusterAdminTokenOutput) ToVaultClusterAdminTokenOutput() VaultClusterAdminTokenOutput {
	return o
}

func (o VaultClusterAdminTokenOutput) ToVaultClusterAdminTokenOutputWithContext(ctx context.Context) VaultClusterAdminTokenOutput {
	return o
}

// The ID of the HCP Vault cluster.
func (o VaultClusterAdminTokenOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *VaultClusterAdminToken) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// The time that the admin token was created.
func (o VaultClusterAdminTokenOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *VaultClusterAdminToken) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The admin token of this HCP Vault cluster.
func (o VaultClusterAdminTokenOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v *VaultClusterAdminToken) pulumi.StringOutput { return v.Token }).(pulumi.StringOutput)
}

type VaultClusterAdminTokenArrayOutput struct{ *pulumi.OutputState }

func (VaultClusterAdminTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VaultClusterAdminToken)(nil)).Elem()
}

func (o VaultClusterAdminTokenArrayOutput) ToVaultClusterAdminTokenArrayOutput() VaultClusterAdminTokenArrayOutput {
	return o
}

func (o VaultClusterAdminTokenArrayOutput) ToVaultClusterAdminTokenArrayOutputWithContext(ctx context.Context) VaultClusterAdminTokenArrayOutput {
	return o
}

func (o VaultClusterAdminTokenArrayOutput) Index(i pulumi.IntInput) VaultClusterAdminTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VaultClusterAdminToken {
		return vs[0].([]*VaultClusterAdminToken)[vs[1].(int)]
	}).(VaultClusterAdminTokenOutput)
}

type VaultClusterAdminTokenMapOutput struct{ *pulumi.OutputState }

func (VaultClusterAdminTokenMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VaultClusterAdminToken)(nil)).Elem()
}

func (o VaultClusterAdminTokenMapOutput) ToVaultClusterAdminTokenMapOutput() VaultClusterAdminTokenMapOutput {
	return o
}

func (o VaultClusterAdminTokenMapOutput) ToVaultClusterAdminTokenMapOutputWithContext(ctx context.Context) VaultClusterAdminTokenMapOutput {
	return o
}

func (o VaultClusterAdminTokenMapOutput) MapIndex(k pulumi.StringInput) VaultClusterAdminTokenOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VaultClusterAdminToken {
		return vs[0].(map[string]*VaultClusterAdminToken)[vs[1].(string)]
	}).(VaultClusterAdminTokenOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VaultClusterAdminTokenInput)(nil)).Elem(), &VaultClusterAdminToken{})
	pulumi.RegisterInputType(reflect.TypeOf((*VaultClusterAdminTokenArrayInput)(nil)).Elem(), VaultClusterAdminTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VaultClusterAdminTokenMapInput)(nil)).Elem(), VaultClusterAdminTokenMap{})
	pulumi.RegisterOutputType(VaultClusterAdminTokenOutput{})
	pulumi.RegisterOutputType(VaultClusterAdminTokenArrayOutput{})
	pulumi.RegisterOutputType(VaultClusterAdminTokenMapOutput{})
}
