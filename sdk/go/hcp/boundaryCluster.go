// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hcp

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource allows you to manage an HCP Boundary cluster
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/grapl-security/pulumi-hcp/sdk/go/hcp"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := hcp.NewBoundaryCluster(ctx, "example", &hcp.BoundaryClusterArgs{
// 			ClusterId: pulumi.String("boundary-cluster"),
// 			Password:  pulumi.String("Password123!"),
// 			Username:  pulumi.String("test-user"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// # The import ID is {cluster_id}
//
// ```sh
//  $ pulumi import hcp:index/boundaryCluster:BoundaryCluster example boundary-cluster
// ```
type BoundaryCluster struct {
	pulumi.CustomResourceState

	// The ID of the Boundary cluster
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// A unique URL identifying the Boundary cluster.
	ClusterUrl pulumi.StringOutput `pulumi:"clusterUrl"`
	// The time that the Boundary cluster was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The password of the initial admin user. This must be at least 8 characters in length. Note that this may show up in logs, and it will be stored in the state file.
	Password pulumi.StringOutput `pulumi:"password"`
	// The state of the Boundary cluster.
	State pulumi.StringOutput `pulumi:"state"`
	// The username of the initial admin user. This must be at least 3 characters in length, alphanumeric, hyphen, or period.
	Username pulumi.StringOutput `pulumi:"username"`
}

// NewBoundaryCluster registers a new resource with the given unique name, arguments, and options.
func NewBoundaryCluster(ctx *pulumi.Context,
	name string, args *BoundaryClusterArgs, opts ...pulumi.ResourceOption) (*BoundaryCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.Password == nil {
		return nil, errors.New("invalid value for required argument 'Password'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource BoundaryCluster
	err := ctx.RegisterResource("hcp:index/boundaryCluster:BoundaryCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBoundaryCluster gets an existing BoundaryCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBoundaryCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BoundaryClusterState, opts ...pulumi.ResourceOption) (*BoundaryCluster, error) {
	var resource BoundaryCluster
	err := ctx.ReadResource("hcp:index/boundaryCluster:BoundaryCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BoundaryCluster resources.
type boundaryClusterState struct {
	// The ID of the Boundary cluster
	ClusterId *string `pulumi:"clusterId"`
	// A unique URL identifying the Boundary cluster.
	ClusterUrl *string `pulumi:"clusterUrl"`
	// The time that the Boundary cluster was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The password of the initial admin user. This must be at least 8 characters in length. Note that this may show up in logs, and it will be stored in the state file.
	Password *string `pulumi:"password"`
	// The state of the Boundary cluster.
	State *string `pulumi:"state"`
	// The username of the initial admin user. This must be at least 3 characters in length, alphanumeric, hyphen, or period.
	Username *string `pulumi:"username"`
}

type BoundaryClusterState struct {
	// The ID of the Boundary cluster
	ClusterId pulumi.StringPtrInput
	// A unique URL identifying the Boundary cluster.
	ClusterUrl pulumi.StringPtrInput
	// The time that the Boundary cluster was created.
	CreatedAt pulumi.StringPtrInput
	// The password of the initial admin user. This must be at least 8 characters in length. Note that this may show up in logs, and it will be stored in the state file.
	Password pulumi.StringPtrInput
	// The state of the Boundary cluster.
	State pulumi.StringPtrInput
	// The username of the initial admin user. This must be at least 3 characters in length, alphanumeric, hyphen, or period.
	Username pulumi.StringPtrInput
}

func (BoundaryClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*boundaryClusterState)(nil)).Elem()
}

type boundaryClusterArgs struct {
	// The ID of the Boundary cluster
	ClusterId string `pulumi:"clusterId"`
	// The password of the initial admin user. This must be at least 8 characters in length. Note that this may show up in logs, and it will be stored in the state file.
	Password string `pulumi:"password"`
	// The username of the initial admin user. This must be at least 3 characters in length, alphanumeric, hyphen, or period.
	Username string `pulumi:"username"`
}

// The set of arguments for constructing a BoundaryCluster resource.
type BoundaryClusterArgs struct {
	// The ID of the Boundary cluster
	ClusterId pulumi.StringInput
	// The password of the initial admin user. This must be at least 8 characters in length. Note that this may show up in logs, and it will be stored in the state file.
	Password pulumi.StringInput
	// The username of the initial admin user. This must be at least 3 characters in length, alphanumeric, hyphen, or period.
	Username pulumi.StringInput
}

func (BoundaryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*boundaryClusterArgs)(nil)).Elem()
}

type BoundaryClusterInput interface {
	pulumi.Input

	ToBoundaryClusterOutput() BoundaryClusterOutput
	ToBoundaryClusterOutputWithContext(ctx context.Context) BoundaryClusterOutput
}

func (*BoundaryCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**BoundaryCluster)(nil)).Elem()
}

func (i *BoundaryCluster) ToBoundaryClusterOutput() BoundaryClusterOutput {
	return i.ToBoundaryClusterOutputWithContext(context.Background())
}

func (i *BoundaryCluster) ToBoundaryClusterOutputWithContext(ctx context.Context) BoundaryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BoundaryClusterOutput)
}

// BoundaryClusterArrayInput is an input type that accepts BoundaryClusterArray and BoundaryClusterArrayOutput values.
// You can construct a concrete instance of `BoundaryClusterArrayInput` via:
//
//          BoundaryClusterArray{ BoundaryClusterArgs{...} }
type BoundaryClusterArrayInput interface {
	pulumi.Input

	ToBoundaryClusterArrayOutput() BoundaryClusterArrayOutput
	ToBoundaryClusterArrayOutputWithContext(context.Context) BoundaryClusterArrayOutput
}

type BoundaryClusterArray []BoundaryClusterInput

func (BoundaryClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BoundaryCluster)(nil)).Elem()
}

func (i BoundaryClusterArray) ToBoundaryClusterArrayOutput() BoundaryClusterArrayOutput {
	return i.ToBoundaryClusterArrayOutputWithContext(context.Background())
}

func (i BoundaryClusterArray) ToBoundaryClusterArrayOutputWithContext(ctx context.Context) BoundaryClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BoundaryClusterArrayOutput)
}

// BoundaryClusterMapInput is an input type that accepts BoundaryClusterMap and BoundaryClusterMapOutput values.
// You can construct a concrete instance of `BoundaryClusterMapInput` via:
//
//          BoundaryClusterMap{ "key": BoundaryClusterArgs{...} }
type BoundaryClusterMapInput interface {
	pulumi.Input

	ToBoundaryClusterMapOutput() BoundaryClusterMapOutput
	ToBoundaryClusterMapOutputWithContext(context.Context) BoundaryClusterMapOutput
}

type BoundaryClusterMap map[string]BoundaryClusterInput

func (BoundaryClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BoundaryCluster)(nil)).Elem()
}

func (i BoundaryClusterMap) ToBoundaryClusterMapOutput() BoundaryClusterMapOutput {
	return i.ToBoundaryClusterMapOutputWithContext(context.Background())
}

func (i BoundaryClusterMap) ToBoundaryClusterMapOutputWithContext(ctx context.Context) BoundaryClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BoundaryClusterMapOutput)
}

type BoundaryClusterOutput struct{ *pulumi.OutputState }

func (BoundaryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BoundaryCluster)(nil)).Elem()
}

func (o BoundaryClusterOutput) ToBoundaryClusterOutput() BoundaryClusterOutput {
	return o
}

func (o BoundaryClusterOutput) ToBoundaryClusterOutputWithContext(ctx context.Context) BoundaryClusterOutput {
	return o
}

// The ID of the Boundary cluster
func (o BoundaryClusterOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryCluster) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// A unique URL identifying the Boundary cluster.
func (o BoundaryClusterOutput) ClusterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryCluster) pulumi.StringOutput { return v.ClusterUrl }).(pulumi.StringOutput)
}

// The time that the Boundary cluster was created.
func (o BoundaryClusterOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryCluster) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The password of the initial admin user. This must be at least 8 characters in length. Note that this may show up in logs, and it will be stored in the state file.
func (o BoundaryClusterOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryCluster) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// The state of the Boundary cluster.
func (o BoundaryClusterOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryCluster) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The username of the initial admin user. This must be at least 3 characters in length, alphanumeric, hyphen, or period.
func (o BoundaryClusterOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryCluster) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

type BoundaryClusterArrayOutput struct{ *pulumi.OutputState }

func (BoundaryClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BoundaryCluster)(nil)).Elem()
}

func (o BoundaryClusterArrayOutput) ToBoundaryClusterArrayOutput() BoundaryClusterArrayOutput {
	return o
}

func (o BoundaryClusterArrayOutput) ToBoundaryClusterArrayOutputWithContext(ctx context.Context) BoundaryClusterArrayOutput {
	return o
}

func (o BoundaryClusterArrayOutput) Index(i pulumi.IntInput) BoundaryClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BoundaryCluster {
		return vs[0].([]*BoundaryCluster)[vs[1].(int)]
	}).(BoundaryClusterOutput)
}

type BoundaryClusterMapOutput struct{ *pulumi.OutputState }

func (BoundaryClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BoundaryCluster)(nil)).Elem()
}

func (o BoundaryClusterMapOutput) ToBoundaryClusterMapOutput() BoundaryClusterMapOutput {
	return o
}

func (o BoundaryClusterMapOutput) ToBoundaryClusterMapOutputWithContext(ctx context.Context) BoundaryClusterMapOutput {
	return o
}

func (o BoundaryClusterMapOutput) MapIndex(k pulumi.StringInput) BoundaryClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BoundaryCluster {
		return vs[0].(map[string]*BoundaryCluster)[vs[1].(string)]
	}).(BoundaryClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BoundaryClusterInput)(nil)).Elem(), &BoundaryCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*BoundaryClusterArrayInput)(nil)).Elem(), BoundaryClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BoundaryClusterMapInput)(nil)).Elem(), BoundaryClusterMap{})
	pulumi.RegisterOutputType(BoundaryClusterOutput{})
	pulumi.RegisterOutputType(BoundaryClusterArrayOutput{})
	pulumi.RegisterOutputType(BoundaryClusterMapOutput{})
}
