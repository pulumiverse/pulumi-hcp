// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hcp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The cluster data source provides information about an existing HCP Vault cluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/grapl-security/pulumi-hcp/sdk/go/hcp"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := hcp.LookupVaultCluster(ctx, &GetVaultClusterArgs{
// 			ClusterId: _var.Cluster_id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupVaultCluster(ctx *pulumi.Context, args *LookupVaultClusterArgs, opts ...pulumi.InvokeOption) (*LookupVaultClusterResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupVaultClusterResult
	err := ctx.Invoke("hcp:index/getVaultCluster:getVaultCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVaultCluster.
type LookupVaultClusterArgs struct {
	// The audit logs configuration for export. (https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)
	AuditLogConfigs []GetVaultClusterAuditLogConfig `pulumi:"auditLogConfigs"`
	// The ID of the HCP Vault cluster.
	ClusterId string `pulumi:"clusterId"`
	// The metrics configuration for export. (https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)
	MetricsConfigs []GetVaultClusterMetricsConfig `pulumi:"metricsConfigs"`
}

// A collection of values returned by getVaultCluster.
type LookupVaultClusterResult struct {
	// The audit logs configuration for export. (https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)
	AuditLogConfigs []GetVaultClusterAuditLogConfig `pulumi:"auditLogConfigs"`
	// The provider where the HCP Vault cluster is located.
	CloudProvider string `pulumi:"cloudProvider"`
	// The ID of the HCP Vault cluster.
	ClusterId string `pulumi:"clusterId"`
	// The time that the Vault cluster was created.
	CreatedAt string `pulumi:"createdAt"`
	// The ID of the HVN this HCP Vault cluster is associated to.
	HvnId string `pulumi:"hvnId"`
	// The provider-assigned unique ID for this managed resource.
	Id                         string                                     `pulumi:"id"`
	MajorVersionUpgradeConfigs []GetVaultClusterMajorVersionUpgradeConfig `pulumi:"majorVersionUpgradeConfigs"`
	// The metrics configuration for export. (https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)
	MetricsConfigs []GetVaultClusterMetricsConfig `pulumi:"metricsConfigs"`
	// The minimum Vault version to use when creating the cluster. If not specified, it is defaulted to the version that is currently recommended by HCP.
	MinVaultVersion string `pulumi:"minVaultVersion"`
	// The name of the customer namespace this HCP Vault cluster is located in.
	Namespace string `pulumi:"namespace"`
	// The ID of the organization this HCP Vault cluster is located in.
	OrganizationId string `pulumi:"organizationId"`
	// The performance replication [paths filter](https://learn.hashicorp.com/tutorials/vault/paths-filter). Applies to performance replication secondaries only and operates in "deny" mode only.
	PathsFilters []string `pulumi:"pathsFilters"`
	// The `selfLink` of the HCP Vault Plus tier cluster which is the primary in the performance replication setup with this HCP Vault Plus tier cluster. If not specified, it is a standalone Plus tier HCP Vault cluster.
	PrimaryLink string `pulumi:"primaryLink"`
	// The ID of the project this HCP Vault cluster is located in.
	ProjectId string `pulumi:"projectId"`
	// Denotes that the cluster has a public endpoint. Defaults to false.
	PublicEndpoint bool `pulumi:"publicEndpoint"`
	// The region where the HCP Vault cluster is located.
	Region string `pulumi:"region"`
	// A unique URL identifying the Vault cluster.
	SelfLink string `pulumi:"selfLink"`
	// The state of the Vault cluster.
	State string `pulumi:"state"`
	// The tier that the HCP Vault cluster will be provisioned as.  Only 'development' is available at this time.
	Tier string `pulumi:"tier"`
	// The private URL for the Vault cluster.
	VaultPrivateEndpointUrl string `pulumi:"vaultPrivateEndpointUrl"`
	// The public URL for the Vault cluster. This will be empty if `publicEndpoint` is `false`.
	VaultPublicEndpointUrl string `pulumi:"vaultPublicEndpointUrl"`
	// The Vault version of the cluster.
	VaultVersion string `pulumi:"vaultVersion"`
}

func LookupVaultClusterOutput(ctx *pulumi.Context, args LookupVaultClusterOutputArgs, opts ...pulumi.InvokeOption) LookupVaultClusterResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVaultClusterResult, error) {
			args := v.(LookupVaultClusterArgs)
			r, err := LookupVaultCluster(ctx, &args, opts...)
			var s LookupVaultClusterResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVaultClusterResultOutput)
}

// A collection of arguments for invoking getVaultCluster.
type LookupVaultClusterOutputArgs struct {
	// The audit logs configuration for export. (https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)
	AuditLogConfigs GetVaultClusterAuditLogConfigArrayInput `pulumi:"auditLogConfigs"`
	// The ID of the HCP Vault cluster.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// The metrics configuration for export. (https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)
	MetricsConfigs GetVaultClusterMetricsConfigArrayInput `pulumi:"metricsConfigs"`
}

func (LookupVaultClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVaultClusterArgs)(nil)).Elem()
}

// A collection of values returned by getVaultCluster.
type LookupVaultClusterResultOutput struct{ *pulumi.OutputState }

func (LookupVaultClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVaultClusterResult)(nil)).Elem()
}

func (o LookupVaultClusterResultOutput) ToLookupVaultClusterResultOutput() LookupVaultClusterResultOutput {
	return o
}

func (o LookupVaultClusterResultOutput) ToLookupVaultClusterResultOutputWithContext(ctx context.Context) LookupVaultClusterResultOutput {
	return o
}

// The audit logs configuration for export. (https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)
func (o LookupVaultClusterResultOutput) AuditLogConfigs() GetVaultClusterAuditLogConfigArrayOutput {
	return o.ApplyT(func(v LookupVaultClusterResult) []GetVaultClusterAuditLogConfig { return v.AuditLogConfigs }).(GetVaultClusterAuditLogConfigArrayOutput)
}

// The provider where the HCP Vault cluster is located.
func (o LookupVaultClusterResultOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVaultClusterResult) string { return v.CloudProvider }).(pulumi.StringOutput)
}

// The ID of the HCP Vault cluster.
func (o LookupVaultClusterResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVaultClusterResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The time that the Vault cluster was created.
func (o LookupVaultClusterResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVaultClusterResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The ID of the HVN this HCP Vault cluster is associated to.
func (o LookupVaultClusterResultOutput) HvnId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVaultClusterResult) string { return v.HvnId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVaultClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVaultClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVaultClusterResultOutput) MajorVersionUpgradeConfigs() GetVaultClusterMajorVersionUpgradeConfigArrayOutput {
	return o.ApplyT(func(v LookupVaultClusterResult) []GetVaultClusterMajorVersionUpgradeConfig {
		return v.MajorVersionUpgradeConfigs
	}).(GetVaultClusterMajorVersionUpgradeConfigArrayOutput)
}

// The metrics configuration for export. (https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)
func (o LookupVaultClusterResultOutput) MetricsConfigs() GetVaultClusterMetricsConfigArrayOutput {
	return o.ApplyT(func(v LookupVaultClusterResult) []GetVaultClusterMetricsConfig { return v.MetricsConfigs }).(GetVaultClusterMetricsConfigArrayOutput)
}

// The minimum Vault version to use when creating the cluster. If not specified, it is defaulted to the version that is currently recommended by HCP.
func (o LookupVaultClusterResultOutput) MinVaultVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVaultClusterResult) string { return v.MinVaultVersion }).(pulumi.StringOutput)
}

// The name of the customer namespace this HCP Vault cluster is located in.
func (o LookupVaultClusterResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVaultClusterResult) string { return v.Namespace }).(pulumi.StringOutput)
}

// The ID of the organization this HCP Vault cluster is located in.
func (o LookupVaultClusterResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVaultClusterResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// The performance replication [paths filter](https://learn.hashicorp.com/tutorials/vault/paths-filter). Applies to performance replication secondaries only and operates in "deny" mode only.
func (o LookupVaultClusterResultOutput) PathsFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVaultClusterResult) []string { return v.PathsFilters }).(pulumi.StringArrayOutput)
}

// The `selfLink` of the HCP Vault Plus tier cluster which is the primary in the performance replication setup with this HCP Vault Plus tier cluster. If not specified, it is a standalone Plus tier HCP Vault cluster.
func (o LookupVaultClusterResultOutput) PrimaryLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVaultClusterResult) string { return v.PrimaryLink }).(pulumi.StringOutput)
}

// The ID of the project this HCP Vault cluster is located in.
func (o LookupVaultClusterResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVaultClusterResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Denotes that the cluster has a public endpoint. Defaults to false.
func (o LookupVaultClusterResultOutput) PublicEndpoint() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVaultClusterResult) bool { return v.PublicEndpoint }).(pulumi.BoolOutput)
}

// The region where the HCP Vault cluster is located.
func (o LookupVaultClusterResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVaultClusterResult) string { return v.Region }).(pulumi.StringOutput)
}

// A unique URL identifying the Vault cluster.
func (o LookupVaultClusterResultOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVaultClusterResult) string { return v.SelfLink }).(pulumi.StringOutput)
}

// The state of the Vault cluster.
func (o LookupVaultClusterResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVaultClusterResult) string { return v.State }).(pulumi.StringOutput)
}

// The tier that the HCP Vault cluster will be provisioned as.  Only 'development' is available at this time.
func (o LookupVaultClusterResultOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVaultClusterResult) string { return v.Tier }).(pulumi.StringOutput)
}

// The private URL for the Vault cluster.
func (o LookupVaultClusterResultOutput) VaultPrivateEndpointUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVaultClusterResult) string { return v.VaultPrivateEndpointUrl }).(pulumi.StringOutput)
}

// The public URL for the Vault cluster. This will be empty if `publicEndpoint` is `false`.
func (o LookupVaultClusterResultOutput) VaultPublicEndpointUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVaultClusterResult) string { return v.VaultPublicEndpointUrl }).(pulumi.StringOutput)
}

// The Vault version of the cluster.
func (o LookupVaultClusterResultOutput) VaultVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVaultClusterResult) string { return v.VaultVersion }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVaultClusterResultOutput{})
}
